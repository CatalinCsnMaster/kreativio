// Copyright (c) 2019, Mohlmann Solutions SRL. All rights reserved.
// Use of this source code is governed by a License that can be found in the LICENSE file.
// SPDX-License-Identifier: BSD-3-Clause

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.22.0-devel
// 	protoc        v3.11.4
// source: shop.proto

package shop

import (
	context "context"
	proto "github.com/golang/protobuf/proto"
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

// MediaFields maps fields to database columns for requests.
type MediaFields int32

const (
	MediaFields_MD_ALL   MediaFields = 0
	MediaFields_MD_ID    MediaFields = 1
	MediaFields_MD_LABEL MediaFields = 2
	MediaFields_MD_URL   MediaFields = 3
)

// Enum value maps for MediaFields.
var (
	MediaFields_name = map[int32]string{
		0: "MD_ALL",
		1: "MD_ID",
		2: "MD_LABEL",
		3: "MD_URL",
	}
	MediaFields_value = map[string]int32{
		"MD_ALL":   0,
		"MD_ID":    1,
		"MD_LABEL": 2,
		"MD_URL":   3,
	}
)

func (x MediaFields) Enum() *MediaFields {
	p := new(MediaFields)
	*p = x
	return p
}

func (x MediaFields) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (MediaFields) Descriptor() protoreflect.EnumDescriptor {
	return file_shop_proto_enumTypes[0].Descriptor()
}

func (MediaFields) Type() protoreflect.EnumType {
	return &file_shop_proto_enumTypes[0]
}

func (x MediaFields) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use MediaFields.Descriptor instead.
func (MediaFields) EnumDescriptor() ([]byte, []int) {
	return file_shop_proto_rawDescGZIP(), []int{0}
}

// BasePriceFields maps fields to database columns for requests.
type BasePriceFields int32

const (
	BasePriceFields_BP_ALL     BasePriceFields = 0
	BasePriceFields_BP_ID      BasePriceFields = 1
	BasePriceFields_BP_CREATED BasePriceFields = 2
	BasePriceFields_BP_UPDATED BasePriceFields = 3
	BasePriceFields_BP_LABEL   BasePriceFields = 4
	BasePriceFields_BP_PRICE   BasePriceFields = 5
)

// Enum value maps for BasePriceFields.
var (
	BasePriceFields_name = map[int32]string{
		0: "BP_ALL",
		1: "BP_ID",
		2: "BP_CREATED",
		3: "BP_UPDATED",
		4: "BP_LABEL",
		5: "BP_PRICE",
	}
	BasePriceFields_value = map[string]int32{
		"BP_ALL":     0,
		"BP_ID":      1,
		"BP_CREATED": 2,
		"BP_UPDATED": 3,
		"BP_LABEL":   4,
		"BP_PRICE":   5,
	}
)

func (x BasePriceFields) Enum() *BasePriceFields {
	p := new(BasePriceFields)
	*p = x
	return p
}

func (x BasePriceFields) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (BasePriceFields) Descriptor() protoreflect.EnumDescriptor {
	return file_shop_proto_enumTypes[1].Descriptor()
}

func (BasePriceFields) Type() protoreflect.EnumType {
	return &file_shop_proto_enumTypes[1]
}

func (x BasePriceFields) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use BasePriceFields.Descriptor instead.
func (BasePriceFields) EnumDescriptor() ([]byte, []int) {
	return file_shop_proto_rawDescGZIP(), []int{1}
}

// VariantFields maps fields to database columns for requests.
type VariantFields int32

const (
	VariantFields_VRT_ALL        VariantFields = 0
	VariantFields_VRT_ID         VariantFields = 1
	VariantFields_VRT_CREATED    VariantFields = 2
	VariantFields_VRT_UPDATED    VariantFields = 3
	VariantFields_VRT_LABELS     VariantFields = 4
	VariantFields_VRT_MULTIPLIER VariantFields = 5
)

// Enum value maps for VariantFields.
var (
	VariantFields_name = map[int32]string{
		0: "VRT_ALL",
		1: "VRT_ID",
		2: "VRT_CREATED",
		3: "VRT_UPDATED",
		4: "VRT_LABELS",
		5: "VRT_MULTIPLIER",
	}
	VariantFields_value = map[string]int32{
		"VRT_ALL":        0,
		"VRT_ID":         1,
		"VRT_CREATED":    2,
		"VRT_UPDATED":    3,
		"VRT_LABELS":     4,
		"VRT_MULTIPLIER": 5,
	}
)

func (x VariantFields) Enum() *VariantFields {
	p := new(VariantFields)
	*p = x
	return p
}

func (x VariantFields) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (VariantFields) Descriptor() protoreflect.EnumDescriptor {
	return file_shop_proto_enumTypes[2].Descriptor()
}

func (VariantFields) Type() protoreflect.EnumType {
	return &file_shop_proto_enumTypes[2]
}

func (x VariantFields) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use VariantFields.Descriptor instead.
func (VariantFields) EnumDescriptor() ([]byte, []int) {
	return file_shop_proto_rawDescGZIP(), []int{2}
}

// ArticleFields maps fields to database columns for requests.
type ArticleFields int32

const (
	ArticleFields_ALL         ArticleFields = 0
	ArticleFields_ID          ArticleFields = 1
	ArticleFields_CREATED     ArticleFields = 2
	ArticleFields_UPDATED     ArticleFields = 3
	ArticleFields_PUBLISHED   ArticleFields = 4
	ArticleFields_TITLE       ArticleFields = 5
	ArticleFields_DESCRIPTION ArticleFields = 6
	ArticleFields_PRICE       ArticleFields = 7
	ArticleFields_PROMOTED    ArticleFields = 11
)

// Enum value maps for ArticleFields.
var (
	ArticleFields_name = map[int32]string{
		0:  "ALL",
		1:  "ID",
		2:  "CREATED",
		3:  "UPDATED",
		4:  "PUBLISHED",
		5:  "TITLE",
		6:  "DESCRIPTION",
		7:  "PRICE",
		11: "PROMOTED",
	}
	ArticleFields_value = map[string]int32{
		"ALL":         0,
		"ID":          1,
		"CREATED":     2,
		"UPDATED":     3,
		"PUBLISHED":   4,
		"TITLE":       5,
		"DESCRIPTION": 6,
		"PRICE":       7,
		"PROMOTED":    11,
	}
)

func (x ArticleFields) Enum() *ArticleFields {
	p := new(ArticleFields)
	*p = x
	return p
}

func (x ArticleFields) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ArticleFields) Descriptor() protoreflect.EnumDescriptor {
	return file_shop_proto_enumTypes[3].Descriptor()
}

func (ArticleFields) Type() protoreflect.EnumType {
	return &file_shop_proto_enumTypes[3]
}

func (x ArticleFields) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ArticleFields.Descriptor instead.
func (ArticleFields) EnumDescriptor() ([]byte, []int) {
	return file_shop_proto_rawDescGZIP(), []int{3}
}

type CategoryFields int32

const (
	CategoryFields_CAT_ALL     CategoryFields = 0
	CategoryFields_CAT_ID      CategoryFields = 1
	CategoryFields_CAT_CREATED CategoryFields = 2
	CategoryFields_CAT_UPDATED CategoryFields = 3
	CategoryFields_CAT_LABEL   CategoryFields = 4
)

// Enum value maps for CategoryFields.
var (
	CategoryFields_name = map[int32]string{
		0: "CAT_ALL",
		1: "CAT_ID",
		2: "CAT_CREATED",
		3: "CAT_UPDATED",
		4: "CAT_LABEL",
	}
	CategoryFields_value = map[string]int32{
		"CAT_ALL":     0,
		"CAT_ID":      1,
		"CAT_CREATED": 2,
		"CAT_UPDATED": 3,
		"CAT_LABEL":   4,
	}
)

func (x CategoryFields) Enum() *CategoryFields {
	p := new(CategoryFields)
	*p = x
	return p
}

func (x CategoryFields) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (CategoryFields) Descriptor() protoreflect.EnumDescriptor {
	return file_shop_proto_enumTypes[4].Descriptor()
}

func (CategoryFields) Type() protoreflect.EnumType {
	return &file_shop_proto_enumTypes[4]
}

func (x CategoryFields) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use CategoryFields.Descriptor instead.
func (CategoryFields) EnumDescriptor() ([]byte, []int) {
	return file_shop_proto_rawDescGZIP(), []int{4}
}

type Order_PaymentMethod int32

const (
	Order_CASH_ON_DELIVERY Order_PaymentMethod = 0
	Order_BANK_TRANSFER    Order_PaymentMethod = 1
	Order_ONLINE           Order_PaymentMethod = 2 // Not yet implemented
)

// Enum value maps for Order_PaymentMethod.
var (
	Order_PaymentMethod_name = map[int32]string{
		0: "CASH_ON_DELIVERY",
		1: "BANK_TRANSFER",
		2: "ONLINE",
	}
	Order_PaymentMethod_value = map[string]int32{
		"CASH_ON_DELIVERY": 0,
		"BANK_TRANSFER":    1,
		"ONLINE":           2,
	}
)

func (x Order_PaymentMethod) Enum() *Order_PaymentMethod {
	p := new(Order_PaymentMethod)
	*p = x
	return p
}

func (x Order_PaymentMethod) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Order_PaymentMethod) Descriptor() protoreflect.EnumDescriptor {
	return file_shop_proto_enumTypes[5].Descriptor()
}

func (Order_PaymentMethod) Type() protoreflect.EnumType {
	return &file_shop_proto_enumTypes[5]
}

func (x Order_PaymentMethod) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Order_PaymentMethod.Descriptor instead.
func (Order_PaymentMethod) EnumDescriptor() ([]byte, []int) {
	return file_shop_proto_rawDescGZIP(), []int{13, 0}
}

type Order_Status int32

const (
	Order_OPEN      Order_Status = 0
	Order_SENT      Order_Status = 1
	Order_COMPLETED Order_Status = 2
)

// Enum value maps for Order_Status.
var (
	Order_Status_name = map[int32]string{
		0: "OPEN",
		1: "SENT",
		2: "COMPLETED",
	}
	Order_Status_value = map[string]int32{
		"OPEN":      0,
		"SENT":      1,
		"COMPLETED": 2,
	}
)

func (x Order_Status) Enum() *Order_Status {
	p := new(Order_Status)
	*p = x
	return p
}

func (x Order_Status) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Order_Status) Descriptor() protoreflect.EnumDescriptor {
	return file_shop_proto_enumTypes[6].Descriptor()
}

func (Order_Status) Type() protoreflect.EnumType {
	return &file_shop_proto_enumTypes[6]
}

func (x Order_Status) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Order_Status.Descriptor instead.
func (Order_Status) EnumDescriptor() ([]byte, []int) {
	return file_shop_proto_rawDescGZIP(), []int{13, 1}
}

type ListOrderConditions_Status int32

const (
	ListOrderConditions_ANY       ListOrderConditions_Status = 0
	ListOrderConditions_OPEN      ListOrderConditions_Status = 1
	ListOrderConditions_SENT      ListOrderConditions_Status = 2
	ListOrderConditions_COMPLETED ListOrderConditions_Status = 3
)

// Enum value maps for ListOrderConditions_Status.
var (
	ListOrderConditions_Status_name = map[int32]string{
		0: "ANY",
		1: "OPEN",
		2: "SENT",
		3: "COMPLETED",
	}
	ListOrderConditions_Status_value = map[string]int32{
		"ANY":       0,
		"OPEN":      1,
		"SENT":      2,
		"COMPLETED": 3,
	}
)

func (x ListOrderConditions_Status) Enum() *ListOrderConditions_Status {
	p := new(ListOrderConditions_Status)
	*p = x
	return p
}

func (x ListOrderConditions_Status) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ListOrderConditions_Status) Descriptor() protoreflect.EnumDescriptor {
	return file_shop_proto_enumTypes[7].Descriptor()
}

func (ListOrderConditions_Status) Type() protoreflect.EnumType {
	return &file_shop_proto_enumTypes[7]
}

func (x ListOrderConditions_Status) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ListOrderConditions_Status.Descriptor instead.
func (ListOrderConditions_Status) EnumDescriptor() ([]byte, []int) {
	return file_shop_proto_rawDescGZIP(), []int{15, 0}
}

type ArticleID struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id    int32  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Token string `protobuf:"bytes,2,opt,name=token,proto3" json:"token,omitempty"` // Delete article requirement
}

func (x *ArticleID) Reset() {
	*x = ArticleID{}
	if protoimpl.UnsafeEnabled {
		mi := &file_shop_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ArticleID) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ArticleID) ProtoMessage() {}

func (x *ArticleID) ProtoReflect() protoreflect.Message {
	mi := &file_shop_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ArticleID.ProtoReflect.Descriptor instead.
func (*ArticleID) Descriptor() ([]byte, []int) {
	return file_shop_proto_rawDescGZIP(), []int{0}
}

func (x *ArticleID) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *ArticleID) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

type Media struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id    int32  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Label string `protobuf:"bytes,2,opt,name=label,proto3" json:"label,omitempty"`
	Url   string `protobuf:"bytes,3,opt,name=url,proto3" json:"url,omitempty"`
}

func (x *Media) Reset() {
	*x = Media{}
	if protoimpl.UnsafeEnabled {
		mi := &file_shop_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Media) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Media) ProtoMessage() {}

func (x *Media) ProtoReflect() protoreflect.Message {
	mi := &file_shop_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Media.ProtoReflect.Descriptor instead.
func (*Media) Descriptor() ([]byte, []int) {
	return file_shop_proto_rawDescGZIP(), []int{1}
}

func (x *Media) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Media) GetLabel() string {
	if x != nil {
		return x.Label
	}
	return ""
}

func (x *Media) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

// BasePrice is an article's base price for dynamic calculation
type BasePrice struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id      int32                `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Created *timestamp.Timestamp `protobuf:"bytes,2,opt,name=created,proto3" json:"created,omitempty"` // Read only
	Updated *timestamp.Timestamp `protobuf:"bytes,3,opt,name=updated,proto3" json:"updated,omitempty"` // Read only
	Label   string               `protobuf:"bytes,4,opt,name=label,proto3" json:"label,omitempty"`
	Price   string               `protobuf:"bytes,5,opt,name=price,proto3" json:"price,omitempty"` // numeric
	Token   string               `protobuf:"bytes,6,opt,name=token,proto3" json:"token,omitempty"` // Admin write access requirement
}

func (x *BasePrice) Reset() {
	*x = BasePrice{}
	if protoimpl.UnsafeEnabled {
		mi := &file_shop_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BasePrice) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BasePrice) ProtoMessage() {}

func (x *BasePrice) ProtoReflect() protoreflect.Message {
	mi := &file_shop_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BasePrice.ProtoReflect.Descriptor instead.
func (*BasePrice) Descriptor() ([]byte, []int) {
	return file_shop_proto_rawDescGZIP(), []int{2}
}

func (x *BasePrice) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *BasePrice) GetCreated() *timestamp.Timestamp {
	if x != nil {
		return x.Created
	}
	return nil
}

func (x *BasePrice) GetUpdated() *timestamp.Timestamp {
	if x != nil {
		return x.Updated
	}
	return nil
}

func (x *BasePrice) GetLabel() string {
	if x != nil {
		return x.Label
	}
	return ""
}

func (x *BasePrice) GetPrice() string {
	if x != nil {
		return x.Price
	}
	return ""
}

func (x *BasePrice) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

type BasePriceListCondtions struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *BasePriceListCondtions) Reset() {
	*x = BasePriceListCondtions{}
	if protoimpl.UnsafeEnabled {
		mi := &file_shop_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BasePriceListCondtions) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BasePriceListCondtions) ProtoMessage() {}

func (x *BasePriceListCondtions) ProtoReflect() protoreflect.Message {
	mi := &file_shop_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BasePriceListCondtions.ProtoReflect.Descriptor instead.
func (*BasePriceListCondtions) Descriptor() ([]byte, []int) {
	return file_shop_proto_rawDescGZIP(), []int{3}
}

type BasePriceList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	List []*BasePrice `protobuf:"bytes,1,rep,name=list,proto3" json:"list,omitempty"`
}

func (x *BasePriceList) Reset() {
	*x = BasePriceList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_shop_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BasePriceList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BasePriceList) ProtoMessage() {}

func (x *BasePriceList) ProtoReflect() protoreflect.Message {
	mi := &file_shop_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BasePriceList.ProtoReflect.Descriptor instead.
func (*BasePriceList) Descriptor() ([]byte, []int) {
	return file_shop_proto_rawDescGZIP(), []int{4}
}

func (x *BasePriceList) GetList() []*BasePrice {
	if x != nil {
		return x.List
	}
	return nil
}

// Variant is a price variation to an article.
type Variant struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id      int64                `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Created *timestamp.Timestamp `protobuf:"bytes,2,opt,name=created,proto3" json:"created,omitempty"` // Read only
	Updated *timestamp.Timestamp `protobuf:"bytes,3,opt,name=updated,proto3" json:"updated,omitempty"` // Read only
	// Labels allow for multi-dimensional price variations.
	Labels     []string `protobuf:"bytes,4,rep,name=labels,proto3" json:"labels,omitempty"`
	Multiplier string   `protobuf:"bytes,5,opt,name=multiplier,proto3" json:"multiplier,omitempty"` // numeric
}

func (x *Variant) Reset() {
	*x = Variant{}
	if protoimpl.UnsafeEnabled {
		mi := &file_shop_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Variant) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Variant) ProtoMessage() {}

func (x *Variant) ProtoReflect() protoreflect.Message {
	mi := &file_shop_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Variant.ProtoReflect.Descriptor instead.
func (*Variant) Descriptor() ([]byte, []int) {
	return file_shop_proto_rawDescGZIP(), []int{5}
}

func (x *Variant) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Variant) GetCreated() *timestamp.Timestamp {
	if x != nil {
		return x.Created
	}
	return nil
}

func (x *Variant) GetUpdated() *timestamp.Timestamp {
	if x != nil {
		return x.Updated
	}
	return nil
}

func (x *Variant) GetLabels() []string {
	if x != nil {
		return x.Labels
	}
	return nil
}

func (x *Variant) GetMultiplier() string {
	if x != nil {
		return x.Multiplier
	}
	return ""
}

type Details struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BasePrice *BasePrice `protobuf:"bytes,1,opt,name=base_price,json=basePrice,proto3" json:"base_price,omitempty"`
	Variant   *Variant   `protobuf:"bytes,2,opt,name=variant,proto3" json:"variant,omitempty"`
}

func (x *Details) Reset() {
	*x = Details{}
	if protoimpl.UnsafeEnabled {
		mi := &file_shop_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Details) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Details) ProtoMessage() {}

func (x *Details) ProtoReflect() protoreflect.Message {
	mi := &file_shop_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Details.ProtoReflect.Descriptor instead.
func (*Details) Descriptor() ([]byte, []int) {
	return file_shop_proto_rawDescGZIP(), []int{6}
}

func (x *Details) GetBasePrice() *BasePrice {
	if x != nil {
		return x.BasePrice
	}
	return nil
}

func (x *Details) GetVariant() *Variant {
	if x != nil {
		return x.Variant
	}
	return nil
}

type Article struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          int32                `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Created     *timestamp.Timestamp `protobuf:"bytes,2,opt,name=created,proto3" json:"created,omitempty"` // Read only
	Updated     *timestamp.Timestamp `protobuf:"bytes,3,opt,name=updated,proto3" json:"updated,omitempty"` // Read only
	Published   bool                 `protobuf:"varint,4,opt,name=published,proto3" json:"published,omitempty"`
	Title       string               `protobuf:"bytes,5,opt,name=title,proto3" json:"title,omitempty"`
	Description string               `protobuf:"bytes,6,opt,name=description,proto3" json:"description,omitempty"`
	Price       string               `protobuf:"bytes,7,opt,name=price,proto3" json:"price,omitempty"`
	Images      []*Media             `protobuf:"bytes,8,rep,name=images,proto3" json:"images,omitempty"`
	Videos      []*Media             `protobuf:"bytes,9,rep,name=videos,proto3" json:"videos,omitempty"`
	Token       string               `protobuf:"bytes,10,opt,name=token,proto3" json:"token,omitempty"` // Write only
	Promoted    bool                 `protobuf:"varint,11,opt,name=promoted,proto3" json:"promoted,omitempty"`
	Categories  []*Category          `protobuf:"bytes,12,rep,name=categories,proto3" json:"categories,omitempty"`
	Baseprices  []*BasePrice         `protobuf:"bytes,13,rep,name=baseprices,proto3" json:"baseprices,omitempty"`
	Variants    []*Variant           `protobuf:"bytes,14,rep,name=variants,proto3" json:"variants,omitempty"`
}

func (x *Article) Reset() {
	*x = Article{}
	if protoimpl.UnsafeEnabled {
		mi := &file_shop_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Article) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Article) ProtoMessage() {}

func (x *Article) ProtoReflect() protoreflect.Message {
	mi := &file_shop_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Article.ProtoReflect.Descriptor instead.
func (*Article) Descriptor() ([]byte, []int) {
	return file_shop_proto_rawDescGZIP(), []int{7}
}

func (x *Article) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Article) GetCreated() *timestamp.Timestamp {
	if x != nil {
		return x.Created
	}
	return nil
}

func (x *Article) GetUpdated() *timestamp.Timestamp {
	if x != nil {
		return x.Updated
	}
	return nil
}

func (x *Article) GetPublished() bool {
	if x != nil {
		return x.Published
	}
	return false
}

func (x *Article) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *Article) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *Article) GetPrice() string {
	if x != nil {
		return x.Price
	}
	return ""
}

func (x *Article) GetImages() []*Media {
	if x != nil {
		return x.Images
	}
	return nil
}

func (x *Article) GetVideos() []*Media {
	if x != nil {
		return x.Videos
	}
	return nil
}

func (x *Article) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

func (x *Article) GetPromoted() bool {
	if x != nil {
		return x.Promoted
	}
	return false
}

func (x *Article) GetCategories() []*Category {
	if x != nil {
		return x.Categories
	}
	return nil
}

func (x *Article) GetBaseprices() []*BasePrice {
	if x != nil {
		return x.Baseprices
	}
	return nil
}

func (x *Article) GetVariants() []*Variant {
	if x != nil {
		return x.Variants
	}
	return nil
}

// ArticleRelations specify which relations should be loaded.
// Each relation in this message is an array of fields.
// So for each specified relation, the requested fields will be selected.
// Empty relations are not loaded.
// Use the *_ALL constant for a relation to return all available fields.
type ArticleRelations struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Images     []MediaFields     `protobuf:"varint,1,rep,packed,name=images,proto3,enum=shop.MediaFields" json:"images,omitempty"`
	Videos     []MediaFields     `protobuf:"varint,2,rep,packed,name=videos,proto3,enum=shop.MediaFields" json:"videos,omitempty"`
	Categories []CategoryFields  `protobuf:"varint,3,rep,packed,name=categories,proto3,enum=shop.CategoryFields" json:"categories,omitempty"`
	Baseprices []BasePriceFields `protobuf:"varint,4,rep,packed,name=baseprices,proto3,enum=shop.BasePriceFields" json:"baseprices,omitempty"`
	Variants   []VariantFields   `protobuf:"varint,5,rep,packed,name=variants,proto3,enum=shop.VariantFields" json:"variants,omitempty"`
}

func (x *ArticleRelations) Reset() {
	*x = ArticleRelations{}
	if protoimpl.UnsafeEnabled {
		mi := &file_shop_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ArticleRelations) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ArticleRelations) ProtoMessage() {}

func (x *ArticleRelations) ProtoReflect() protoreflect.Message {
	mi := &file_shop_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ArticleRelations.ProtoReflect.Descriptor instead.
func (*ArticleRelations) Descriptor() ([]byte, []int) {
	return file_shop_proto_rawDescGZIP(), []int{8}
}

func (x *ArticleRelations) GetImages() []MediaFields {
	if x != nil {
		return x.Images
	}
	return nil
}

func (x *ArticleRelations) GetVideos() []MediaFields {
	if x != nil {
		return x.Videos
	}
	return nil
}

func (x *ArticleRelations) GetCategories() []CategoryFields {
	if x != nil {
		return x.Categories
	}
	return nil
}

func (x *ArticleRelations) GetBaseprices() []BasePriceFields {
	if x != nil {
		return x.Baseprices
	}
	return nil
}

func (x *ArticleRelations) GetVariants() []VariantFields {
	if x != nil {
		return x.Variants
	}
	return nil
}

// Limits sets limit and offset to any list query
// If the limit field is set to zero,
// the server can apply a default limit.
type Limits struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Limit  int32 `protobuf:"varint,1,opt,name=limit,proto3" json:"limit,omitempty"`
	Offset int32 `protobuf:"varint,2,opt,name=offset,proto3" json:"offset,omitempty"`
}

func (x *Limits) Reset() {
	*x = Limits{}
	if protoimpl.UnsafeEnabled {
		mi := &file_shop_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Limits) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Limits) ProtoMessage() {}

func (x *Limits) ProtoReflect() protoreflect.Message {
	mi := &file_shop_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Limits.ProtoReflect.Descriptor instead.
func (*Limits) Descriptor() ([]byte, []int) {
	return file_shop_proto_rawDescGZIP(), []int{9}
}

func (x *Limits) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *Limits) GetOffset() int32 {
	if x != nil {
		return x.Offset
	}
	return 0
}

// ListConditions are the conditions against which the article list is filtered.
// The conitions are aplied as AND.
// For example:
//   &ListCondions{
//      OnlyPublished: true,
//      OnlyCategoryLabel: "foo",
//   }
// Will result in articles that are published and have a category label of "foo".
//
// Conditions are ignored when in their default value.
// Meaning articles with any state for that field is returned.
type ListConditions struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OnlyPublished     bool              `protobuf:"varint,1,opt,name=only_published,json=onlyPublished,proto3" json:"only_published,omitempty"`
	OnlyPromoted      bool              `protobuf:"varint,2,opt,name=only_promoted,json=onlyPromoted,proto3" json:"only_promoted,omitempty"`
	OnlyCategoryId    int32             `protobuf:"varint,4,opt,name=only_category_id,json=onlyCategoryId,proto3" json:"only_category_id,omitempty"`
	OnlyCategoryLabel string            `protobuf:"bytes,5,opt,name=only_category_label,json=onlyCategoryLabel,proto3" json:"only_category_label,omitempty"`
	Fields            []ArticleFields   `protobuf:"varint,6,rep,packed,name=fields,proto3,enum=shop.ArticleFields" json:"fields,omitempty"` // Which columns to select. Empty selects all columns.
	Relations         *ArticleRelations `protobuf:"bytes,7,opt,name=relations,proto3" json:"relations,omitempty"`                           // Which relations to load. Empty will load only images.
	Limits            *Limits           `protobuf:"bytes,8,opt,name=limits,proto3" json:"limits,omitempty"`
}

func (x *ListConditions) Reset() {
	*x = ListConditions{}
	if protoimpl.UnsafeEnabled {
		mi := &file_shop_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListConditions) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListConditions) ProtoMessage() {}

func (x *ListConditions) ProtoReflect() protoreflect.Message {
	mi := &file_shop_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListConditions.ProtoReflect.Descriptor instead.
func (*ListConditions) Descriptor() ([]byte, []int) {
	return file_shop_proto_rawDescGZIP(), []int{10}
}

func (x *ListConditions) GetOnlyPublished() bool {
	if x != nil {
		return x.OnlyPublished
	}
	return false
}

func (x *ListConditions) GetOnlyPromoted() bool {
	if x != nil {
		return x.OnlyPromoted
	}
	return false
}

func (x *ListConditions) GetOnlyCategoryId() int32 {
	if x != nil {
		return x.OnlyCategoryId
	}
	return 0
}

func (x *ListConditions) GetOnlyCategoryLabel() string {
	if x != nil {
		return x.OnlyCategoryLabel
	}
	return ""
}

func (x *ListConditions) GetFields() []ArticleFields {
	if x != nil {
		return x.Fields
	}
	return nil
}

func (x *ListConditions) GetRelations() *ArticleRelations {
	if x != nil {
		return x.Relations
	}
	return nil
}

func (x *ListConditions) GetLimits() *Limits {
	if x != nil {
		return x.Limits
	}
	return nil
}

type ArticleList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	List []*Article `protobuf:"bytes,1,rep,name=list,proto3" json:"list,omitempty"`
}

func (x *ArticleList) Reset() {
	*x = ArticleList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_shop_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ArticleList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ArticleList) ProtoMessage() {}

func (x *ArticleList) ProtoReflect() protoreflect.Message {
	mi := &file_shop_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ArticleList.ProtoReflect.Descriptor instead.
func (*ArticleList) Descriptor() ([]byte, []int) {
	return file_shop_proto_rawDescGZIP(), []int{11}
}

func (x *ArticleList) GetList() []*Article {
	if x != nil {
		return x.List
	}
	return nil
}

type Deleted struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Rows int64 `protobuf:"varint,1,opt,name=rows,proto3" json:"rows,omitempty"`
}

func (x *Deleted) Reset() {
	*x = Deleted{}
	if protoimpl.UnsafeEnabled {
		mi := &file_shop_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Deleted) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Deleted) ProtoMessage() {}

func (x *Deleted) ProtoReflect() protoreflect.Message {
	mi := &file_shop_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Deleted.ProtoReflect.Descriptor instead.
func (*Deleted) Descriptor() ([]byte, []int) {
	return file_shop_proto_rawDescGZIP(), []int{12}
}

func (x *Deleted) GetRows() int64 {
	if x != nil {
		return x.Rows
	}
	return 0
}

type Order struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id            int32                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Created       *timestamp.Timestamp   `protobuf:"bytes,2,opt,name=created,proto3" json:"created,omitempty"` // Read only
	Updated       *timestamp.Timestamp   `protobuf:"bytes,3,opt,name=updated,proto3" json:"updated,omitempty"` // Read only
	FullName      string                 `protobuf:"bytes,4,opt,name=full_name,json=fullName,proto3" json:"full_name,omitempty"`
	Email         string                 `protobuf:"bytes,5,opt,name=email,proto3" json:"email,omitempty"`
	Phone         string                 `protobuf:"bytes,6,opt,name=phone,proto3" json:"phone,omitempty"`
	FullAddress   string                 `protobuf:"bytes,7,opt,name=full_address,json=fullAddress,proto3" json:"full_address,omitempty"`
	Message       string                 `protobuf:"bytes,8,opt,name=message,proto3" json:"message,omitempty"`
	PaymentMethod Order_PaymentMethod    `protobuf:"varint,9,opt,name=payment_method,json=paymentMethod,proto3,enum=shop.Order_PaymentMethod" json:"payment_method,omitempty"`
	Status        Order_Status           `protobuf:"varint,10,opt,name=status,proto3,enum=shop.Order_Status" json:"status,omitempty"` // Admin write access only
	Articles      []*Order_ArticleAmount `protobuf:"bytes,11,rep,name=articles,proto3" json:"articles,omitempty"`
	Sum           string                 `protobuf:"bytes,12,opt,name=sum,proto3" json:"sum,omitempty"`     // Read Only; sum of all line totals
	Token         string                 `protobuf:"bytes,13,opt,name=token,proto3" json:"token,omitempty"` // Admin write access requirement
}

func (x *Order) Reset() {
	*x = Order{}
	if protoimpl.UnsafeEnabled {
		mi := &file_shop_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Order) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Order) ProtoMessage() {}

func (x *Order) ProtoReflect() protoreflect.Message {
	mi := &file_shop_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Order.ProtoReflect.Descriptor instead.
func (*Order) Descriptor() ([]byte, []int) {
	return file_shop_proto_rawDescGZIP(), []int{13}
}

func (x *Order) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Order) GetCreated() *timestamp.Timestamp {
	if x != nil {
		return x.Created
	}
	return nil
}

func (x *Order) GetUpdated() *timestamp.Timestamp {
	if x != nil {
		return x.Updated
	}
	return nil
}

func (x *Order) GetFullName() string {
	if x != nil {
		return x.FullName
	}
	return ""
}

func (x *Order) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *Order) GetPhone() string {
	if x != nil {
		return x.Phone
	}
	return ""
}

func (x *Order) GetFullAddress() string {
	if x != nil {
		return x.FullAddress
	}
	return ""
}

func (x *Order) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *Order) GetPaymentMethod() Order_PaymentMethod {
	if x != nil {
		return x.PaymentMethod
	}
	return Order_CASH_ON_DELIVERY
}

func (x *Order) GetStatus() Order_Status {
	if x != nil {
		return x.Status
	}
	return Order_OPEN
}

func (x *Order) GetArticles() []*Order_ArticleAmount {
	if x != nil {
		return x.Articles
	}
	return nil
}

func (x *Order) GetSum() string {
	if x != nil {
		return x.Sum
	}
	return ""
}

func (x *Order) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

type OrderID struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id     int32  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	EnvKey string `protobuf:"bytes,2,opt,name=env_key,json=envKey,proto3" json:"env_key,omitempty"`
	Data   string `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *OrderID) Reset() {
	*x = OrderID{}
	if protoimpl.UnsafeEnabled {
		mi := &file_shop_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OrderID) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OrderID) ProtoMessage() {}

func (x *OrderID) ProtoReflect() protoreflect.Message {
	mi := &file_shop_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OrderID.ProtoReflect.Descriptor instead.
func (*OrderID) Descriptor() ([]byte, []int) {
	return file_shop_proto_rawDescGZIP(), []int{14}
}

func (x *OrderID) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *OrderID) GetEnvKey() string {
	if x != nil {
		return x.EnvKey
	}
	return ""
}

func (x *OrderID) GetData() string {
	if x != nil {
		return x.Data
	}
	return ""
}

type ListOrderConditions struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status ListOrderConditions_Status `protobuf:"varint,1,opt,name=status,proto3,enum=shop.ListOrderConditions_Status" json:"status,omitempty"`
	Token  string                     `protobuf:"bytes,2,opt,name=token,proto3" json:"token,omitempty"`
}

func (x *ListOrderConditions) Reset() {
	*x = ListOrderConditions{}
	if protoimpl.UnsafeEnabled {
		mi := &file_shop_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListOrderConditions) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListOrderConditions) ProtoMessage() {}

func (x *ListOrderConditions) ProtoReflect() protoreflect.Message {
	mi := &file_shop_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListOrderConditions.ProtoReflect.Descriptor instead.
func (*ListOrderConditions) Descriptor() ([]byte, []int) {
	return file_shop_proto_rawDescGZIP(), []int{15}
}

func (x *ListOrderConditions) GetStatus() ListOrderConditions_Status {
	if x != nil {
		return x.Status
	}
	return ListOrderConditions_ANY
}

func (x *ListOrderConditions) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

type OrderList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	List []*Order `protobuf:"bytes,1,rep,name=list,proto3" json:"list,omitempty"`
}

func (x *OrderList) Reset() {
	*x = OrderList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_shop_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OrderList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OrderList) ProtoMessage() {}

func (x *OrderList) ProtoReflect() protoreflect.Message {
	mi := &file_shop_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OrderList.ProtoReflect.Descriptor instead.
func (*OrderList) Descriptor() ([]byte, []int) {
	return file_shop_proto_rawDescGZIP(), []int{16}
}

func (x *OrderList) GetList() []*Order {
	if x != nil {
		return x.List
	}
	return nil
}

type Category struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id      int32                `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`          // Upsert identification, do not modify. Leave 0 for new categories.
	Created *timestamp.Timestamp `protobuf:"bytes,2,opt,name=created,proto3" json:"created,omitempty"` // Read only
	Updated *timestamp.Timestamp `protobuf:"bytes,3,opt,name=updated,proto3" json:"updated,omitempty"` // Read only
	Label   string               `protobuf:"bytes,4,opt,name=label,proto3" json:"label,omitempty"`
}

func (x *Category) Reset() {
	*x = Category{}
	if protoimpl.UnsafeEnabled {
		mi := &file_shop_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Category) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Category) ProtoMessage() {}

func (x *Category) ProtoReflect() protoreflect.Message {
	mi := &file_shop_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Category.ProtoReflect.Descriptor instead.
func (*Category) Descriptor() ([]byte, []int) {
	return file_shop_proto_rawDescGZIP(), []int{17}
}

func (x *Category) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Category) GetCreated() *timestamp.Timestamp {
	if x != nil {
		return x.Created
	}
	return nil
}

func (x *Category) GetUpdated() *timestamp.Timestamp {
	if x != nil {
		return x.Updated
	}
	return nil
}

func (x *Category) GetLabel() string {
	if x != nil {
		return x.Label
	}
	return ""
}

// CategoryList holds an ordered list of Categories.
type CategoryList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	List  []*Category `protobuf:"bytes,1,rep,name=list,proto3" json:"list,omitempty"`
	Token string      `protobuf:"bytes,2,opt,name=token,proto3" json:"token,omitempty"` // Admin write access requirement
}

func (x *CategoryList) Reset() {
	*x = CategoryList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_shop_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CategoryList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CategoryList) ProtoMessage() {}

func (x *CategoryList) ProtoReflect() protoreflect.Message {
	mi := &file_shop_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CategoryList.ProtoReflect.Descriptor instead.
func (*CategoryList) Descriptor() ([]byte, []int) {
	return file_shop_proto_rawDescGZIP(), []int{18}
}

func (x *CategoryList) GetList() []*Category {
	if x != nil {
		return x.List
	}
	return nil
}

func (x *CategoryList) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

type CategoryListConditions struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OnlyPublishedArticles bool `protobuf:"varint,1,opt,name=only_published_articles,json=onlyPublishedArticles,proto3" json:"only_published_articles,omitempty"` // Only return categories that have published articles.
}

func (x *CategoryListConditions) Reset() {
	*x = CategoryListConditions{}
	if protoimpl.UnsafeEnabled {
		mi := &file_shop_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CategoryListConditions) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CategoryListConditions) ProtoMessage() {}

func (x *CategoryListConditions) ProtoReflect() protoreflect.Message {
	mi := &file_shop_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CategoryListConditions.ProtoReflect.Descriptor instead.
func (*CategoryListConditions) Descriptor() ([]byte, []int) {
	return file_shop_proto_rawDescGZIP(), []int{19}
}

func (x *CategoryListConditions) GetOnlyPublishedArticles() bool {
	if x != nil {
		return x.OnlyPublishedArticles
	}
	return false
}

type TextSearch struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Text string `protobuf:"bytes,1,opt,name=text,proto3" json:"text,omitempty"` // Search keyword
}

func (x *TextSearch) Reset() {
	*x = TextSearch{}
	if protoimpl.UnsafeEnabled {
		mi := &file_shop_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TextSearch) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TextSearch) ProtoMessage() {}

func (x *TextSearch) ProtoReflect() protoreflect.Message {
	mi := &file_shop_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TextSearch.ProtoReflect.Descriptor instead.
func (*TextSearch) Descriptor() ([]byte, []int) {
	return file_shop_proto_rawDescGZIP(), []int{20}
}

func (x *TextSearch) GetText() string {
	if x != nil {
		return x.Text
	}
	return ""
}

type SuggestionList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Category []*Category `protobuf:"bytes,1,rep,name=Category,proto3" json:"Category,omitempty"`
	Article  []*Article  `protobuf:"bytes,2,rep,name=Article,proto3" json:"Article,omitempty"`
}

func (x *SuggestionList) Reset() {
	*x = SuggestionList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_shop_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SuggestionList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SuggestionList) ProtoMessage() {}

func (x *SuggestionList) ProtoReflect() protoreflect.Message {
	mi := &file_shop_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SuggestionList.ProtoReflect.Descriptor instead.
func (*SuggestionList) Descriptor() ([]byte, []int) {
	return file_shop_proto_rawDescGZIP(), []int{21}
}

func (x *SuggestionList) GetCategory() []*Category {
	if x != nil {
		return x.Category
	}
	return nil
}

func (x *SuggestionList) GetArticle() []*Article {
	if x != nil {
		return x.Article
	}
	return nil
}

type Message struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id      int32  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`          // Read-only
	Name    string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`       // Required
	Email   string `protobuf:"bytes,3,opt,name=email,proto3" json:"email,omitempty"`     // Required
	Phone   string `protobuf:"bytes,4,opt,name=phone,proto3" json:"phone,omitempty"`     // Optional
	Subject string `protobuf:"bytes,5,opt,name=subject,proto3" json:"subject,omitempty"` // Optional
	Message string `protobuf:"bytes,6,opt,name=message,proto3" json:"message,omitempty"` // Required
}

func (x *Message) Reset() {
	*x = Message{}
	if protoimpl.UnsafeEnabled {
		mi := &file_shop_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Message) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Message) ProtoMessage() {}

func (x *Message) ProtoReflect() protoreflect.Message {
	mi := &file_shop_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Message.ProtoReflect.Descriptor instead.
func (*Message) Descriptor() ([]byte, []int) {
	return file_shop_proto_rawDescGZIP(), []int{22}
}

func (x *Message) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Message) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Message) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *Message) GetPhone() string {
	if x != nil {
		return x.Phone
	}
	return ""
}

func (x *Message) GetSubject() string {
	if x != nil {
		return x.Subject
	}
	return ""
}

func (x *Message) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type MessageID struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *MessageID) Reset() {
	*x = MessageID{}
	if protoimpl.UnsafeEnabled {
		mi := &file_shop_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MessageID) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MessageID) ProtoMessage() {}

func (x *MessageID) ProtoReflect() protoreflect.Message {
	mi := &file_shop_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MessageID.ProtoReflect.Descriptor instead.
func (*MessageID) Descriptor() ([]byte, []int) {
	return file_shop_proto_rawDescGZIP(), []int{23}
}

func (x *MessageID) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

type Order_ArticleAmount struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ArticleId   int32    `protobuf:"varint,1,opt,name=article_id,json=articleId,proto3" json:"article_id,omitempty"`
	Amount      int32    `protobuf:"varint,2,opt,name=amount,proto3" json:"amount,omitempty"`
	Title       string   `protobuf:"bytes,3,opt,name=title,proto3" json:"title,omitempty"`                                   // Read only
	Price       string   `protobuf:"bytes,4,opt,name=price,proto3" json:"price,omitempty"`                                   // Read only
	Total       string   `protobuf:"bytes,5,opt,name=total,proto3" json:"total,omitempty"`                                   // Read only; line total of Price*Amount
	Details     *Details `protobuf:"bytes,6,opt,name=details,proto3" json:"details,omitempty"`                               // Read only
	BasePriceId int32    `protobuf:"varint,7,opt,name=base_price_id,json=basePriceId,proto3" json:"base_price_id,omitempty"` // Checkout write only
	VariantId   int64    `protobuf:"varint,8,opt,name=variant_id,json=variantId,proto3" json:"variant_id,omitempty"`         // Checkout write only
}

func (x *Order_ArticleAmount) Reset() {
	*x = Order_ArticleAmount{}
	if protoimpl.UnsafeEnabled {
		mi := &file_shop_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Order_ArticleAmount) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Order_ArticleAmount) ProtoMessage() {}

func (x *Order_ArticleAmount) ProtoReflect() protoreflect.Message {
	mi := &file_shop_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Order_ArticleAmount.ProtoReflect.Descriptor instead.
func (*Order_ArticleAmount) Descriptor() ([]byte, []int) {
	return file_shop_proto_rawDescGZIP(), []int{13, 0}
}

func (x *Order_ArticleAmount) GetArticleId() int32 {
	if x != nil {
		return x.ArticleId
	}
	return 0
}

func (x *Order_ArticleAmount) GetAmount() int32 {
	if x != nil {
		return x.Amount
	}
	return 0
}

func (x *Order_ArticleAmount) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *Order_ArticleAmount) GetPrice() string {
	if x != nil {
		return x.Price
	}
	return ""
}

func (x *Order_ArticleAmount) GetTotal() string {
	if x != nil {
		return x.Total
	}
	return ""
}

func (x *Order_ArticleAmount) GetDetails() *Details {
	if x != nil {
		return x.Details
	}
	return nil
}

func (x *Order_ArticleAmount) GetBasePriceId() int32 {
	if x != nil {
		return x.BasePriceId
	}
	return 0
}

func (x *Order_ArticleAmount) GetVariantId() int64 {
	if x != nil {
		return x.VariantId
	}
	return 0
}

var File_shop_proto protoreflect.FileDescriptor

var file_shop_proto_rawDesc = []byte{
	0x0a, 0x0a, 0x73, 0x68, 0x6f, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x04, 0x73, 0x68,
	0x6f, 0x70, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x22, 0x31, 0x0a, 0x09, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x49, 0x44,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64,
	0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x22, 0x3f, 0x0a, 0x05, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x12,
	0x14, 0x0a, 0x05, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x6c, 0x61, 0x62, 0x65, 0x6c, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x6c, 0x22, 0xc9, 0x01, 0x0a, 0x09, 0x42, 0x61, 0x73, 0x65,
	0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x02, 0x69, 0x64, 0x12, 0x34, 0x0a, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x52, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x12, 0x34, 0x0a, 0x07, 0x75,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x07, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x64, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x12, 0x14, 0x0a,
	0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x6f,
	0x6b, 0x65, 0x6e, 0x22, 0x18, 0x0a, 0x16, 0x42, 0x61, 0x73, 0x65, 0x50, 0x72, 0x69, 0x63, 0x65,
	0x4c, 0x69, 0x73, 0x74, 0x43, 0x6f, 0x6e, 0x64, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x22, 0x34, 0x0a,
	0x0d, 0x42, 0x61, 0x73, 0x65, 0x50, 0x72, 0x69, 0x63, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x23,
	0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x73,
	0x68, 0x6f, 0x70, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x50, 0x72, 0x69, 0x63, 0x65, 0x52, 0x04, 0x6c,
	0x69, 0x73, 0x74, 0x22, 0xbd, 0x01, 0x0a, 0x07, 0x56, 0x61, 0x72, 0x69, 0x61, 0x6e, 0x74, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12,
	0x34, 0x0a, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x07, 0x63, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x64, 0x12, 0x34, 0x0a, 0x07, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x52, 0x07, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x6c,
	0x61, 0x62, 0x65, 0x6c, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x09, 0x52, 0x06, 0x6c, 0x61, 0x62,
	0x65, 0x6c, 0x73, 0x12, 0x1e, 0x0a, 0x0a, 0x6d, 0x75, 0x6c, 0x74, 0x69, 0x70, 0x6c, 0x69, 0x65,
	0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x6d, 0x75, 0x6c, 0x74, 0x69, 0x70, 0x6c,
	0x69, 0x65, 0x72, 0x22, 0x62, 0x0a, 0x07, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x12, 0x2e,
	0x0a, 0x0a, 0x62, 0x61, 0x73, 0x65, 0x5f, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x73, 0x68, 0x6f, 0x70, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x50, 0x72,
	0x69, 0x63, 0x65, 0x52, 0x09, 0x62, 0x61, 0x73, 0x65, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x27,
	0x0a, 0x07, 0x76, 0x61, 0x72, 0x69, 0x61, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x0d, 0x2e, 0x73, 0x68, 0x6f, 0x70, 0x2e, 0x56, 0x61, 0x72, 0x69, 0x61, 0x6e, 0x74, 0x52, 0x07,
	0x76, 0x61, 0x72, 0x69, 0x61, 0x6e, 0x74, 0x22, 0xf9, 0x03, 0x0a, 0x07, 0x41, 0x72, 0x74, 0x69,
	0x63, 0x6c, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x02, 0x69, 0x64, 0x12, 0x34, 0x0a, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x52, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x12, 0x34, 0x0a, 0x07, 0x75, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x07, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x12,
	0x1c, 0x0a, 0x09, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x65, 0x64, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x09, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x65, 0x64, 0x12, 0x14, 0x0a,
	0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69,
	0x74, 0x6c, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x12, 0x23, 0x0a, 0x06, 0x69,
	0x6d, 0x61, 0x67, 0x65, 0x73, 0x18, 0x08, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x73, 0x68,
	0x6f, 0x70, 0x2e, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x52, 0x06, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x73,
	0x12, 0x23, 0x0a, 0x06, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x73, 0x18, 0x09, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x0b, 0x2e, 0x73, 0x68, 0x6f, 0x70, 0x2e, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x52, 0x06, 0x76,
	0x69, 0x64, 0x65, 0x6f, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x0a,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x1a, 0x0a, 0x08, 0x70,
	0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x65, 0x64, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x70,
	0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x65, 0x64, 0x12, 0x2e, 0x0a, 0x0a, 0x63, 0x61, 0x74, 0x65, 0x67,
	0x6f, 0x72, 0x69, 0x65, 0x73, 0x18, 0x0c, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x73, 0x68,
	0x6f, 0x70, 0x2e, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x52, 0x0a, 0x63, 0x61, 0x74,
	0x65, 0x67, 0x6f, 0x72, 0x69, 0x65, 0x73, 0x12, 0x2f, 0x0a, 0x0a, 0x62, 0x61, 0x73, 0x65, 0x70,
	0x72, 0x69, 0x63, 0x65, 0x73, 0x18, 0x0d, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x73, 0x68,
	0x6f, 0x70, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x50, 0x72, 0x69, 0x63, 0x65, 0x52, 0x0a, 0x62, 0x61,
	0x73, 0x65, 0x70, 0x72, 0x69, 0x63, 0x65, 0x73, 0x12, 0x29, 0x0a, 0x08, 0x76, 0x61, 0x72, 0x69,
	0x61, 0x6e, 0x74, 0x73, 0x18, 0x0e, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x73, 0x68, 0x6f,
	0x70, 0x2e, 0x56, 0x61, 0x72, 0x69, 0x61, 0x6e, 0x74, 0x52, 0x08, 0x76, 0x61, 0x72, 0x69, 0x61,
	0x6e, 0x74, 0x73, 0x22, 0x86, 0x02, 0x0a, 0x10, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x52,
	0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x29, 0x0a, 0x06, 0x69, 0x6d, 0x61, 0x67,
	0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0e, 0x32, 0x11, 0x2e, 0x73, 0x68, 0x6f, 0x70, 0x2e,
	0x4d, 0x65, 0x64, 0x69, 0x61, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x52, 0x06, 0x69, 0x6d, 0x61,
	0x67, 0x65, 0x73, 0x12, 0x29, 0x0a, 0x06, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x73, 0x18, 0x02, 0x20,
	0x03, 0x28, 0x0e, 0x32, 0x11, 0x2e, 0x73, 0x68, 0x6f, 0x70, 0x2e, 0x4d, 0x65, 0x64, 0x69, 0x61,
	0x46, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x52, 0x06, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x73, 0x12, 0x34,
	0x0a, 0x0a, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x69, 0x65, 0x73, 0x18, 0x03, 0x20, 0x03,
	0x28, 0x0e, 0x32, 0x14, 0x2e, 0x73, 0x68, 0x6f, 0x70, 0x2e, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f,
	0x72, 0x79, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x52, 0x0a, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f,
	0x72, 0x69, 0x65, 0x73, 0x12, 0x35, 0x0a, 0x0a, 0x62, 0x61, 0x73, 0x65, 0x70, 0x72, 0x69, 0x63,
	0x65, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0e, 0x32, 0x15, 0x2e, 0x73, 0x68, 0x6f, 0x70, 0x2e,
	0x42, 0x61, 0x73, 0x65, 0x50, 0x72, 0x69, 0x63, 0x65, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x52,
	0x0a, 0x62, 0x61, 0x73, 0x65, 0x70, 0x72, 0x69, 0x63, 0x65, 0x73, 0x12, 0x2f, 0x0a, 0x08, 0x76,
	0x61, 0x72, 0x69, 0x61, 0x6e, 0x74, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0e, 0x32, 0x13, 0x2e,
	0x73, 0x68, 0x6f, 0x70, 0x2e, 0x56, 0x61, 0x72, 0x69, 0x61, 0x6e, 0x74, 0x46, 0x69, 0x65, 0x6c,
	0x64, 0x73, 0x52, 0x08, 0x76, 0x61, 0x72, 0x69, 0x61, 0x6e, 0x74, 0x73, 0x22, 0x36, 0x0a, 0x06,
	0x4c, 0x69, 0x6d, 0x69, 0x74, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x16, 0x0a, 0x06,
	0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x6f, 0x66,
	0x66, 0x73, 0x65, 0x74, 0x22, 0xbf, 0x02, 0x0a, 0x0e, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x6f, 0x6e,
	0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x25, 0x0a, 0x0e, 0x6f, 0x6e, 0x6c, 0x79, 0x5f,
	0x70, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x65, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x0d, 0x6f, 0x6e, 0x6c, 0x79, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x65, 0x64, 0x12, 0x23,
	0x0a, 0x0d, 0x6f, 0x6e, 0x6c, 0x79, 0x5f, 0x70, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x65, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0c, 0x6f, 0x6e, 0x6c, 0x79, 0x50, 0x72, 0x6f, 0x6d, 0x6f,
	0x74, 0x65, 0x64, 0x12, 0x28, 0x0a, 0x10, 0x6f, 0x6e, 0x6c, 0x79, 0x5f, 0x63, 0x61, 0x74, 0x65,
	0x67, 0x6f, 0x72, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0e, 0x6f,
	0x6e, 0x6c, 0x79, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x49, 0x64, 0x12, 0x2e, 0x0a,
	0x13, 0x6f, 0x6e, 0x6c, 0x79, 0x5f, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x5f, 0x6c,
	0x61, 0x62, 0x65, 0x6c, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x6f, 0x6e, 0x6c, 0x79,
	0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x12, 0x2b, 0x0a,
	0x06, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0e, 0x32, 0x13, 0x2e,
	0x73, 0x68, 0x6f, 0x70, 0x2e, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x46, 0x69, 0x65, 0x6c,
	0x64, 0x73, 0x52, 0x06, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x12, 0x34, 0x0a, 0x09, 0x72, 0x65,
	0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e,
	0x73, 0x68, 0x6f, 0x70, 0x2e, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x52, 0x65, 0x6c, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x09, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x12, 0x24, 0x0a, 0x06, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x73, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x0c, 0x2e, 0x73, 0x68, 0x6f, 0x70, 0x2e, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x73, 0x52, 0x06,
	0x6c, 0x69, 0x6d, 0x69, 0x74, 0x73, 0x22, 0x30, 0x0a, 0x0b, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c,
	0x65, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x21, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x73, 0x68, 0x6f, 0x70, 0x2e, 0x41, 0x72, 0x74, 0x69, 0x63,
	0x6c, 0x65, 0x52, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x22, 0x1d, 0x0a, 0x07, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x72, 0x6f, 0x77, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x04, 0x72, 0x6f, 0x77, 0x73, 0x22, 0xc0, 0x06, 0x0a, 0x05, 0x4f, 0x72, 0x64, 0x65,
	0x72, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69,
	0x64, 0x12, 0x34, 0x0a, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x07,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x12, 0x34, 0x0a, 0x07, 0x75, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x52, 0x07, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x12, 0x1b, 0x0a,
	0x09, 0x66, 0x75, 0x6c, 0x6c, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x66, 0x75, 0x6c, 0x6c, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x6d,
	0x61, 0x69, 0x6c, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c,
	0x12, 0x14, 0x0a, 0x05, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x66, 0x75, 0x6c, 0x6c, 0x5f, 0x61,
	0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x66, 0x75,
	0x6c, 0x6c, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x12, 0x40, 0x0a, 0x0e, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x6d,
	0x65, 0x74, 0x68, 0x6f, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x19, 0x2e, 0x73, 0x68,
	0x6f, 0x70, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74,
	0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x52, 0x0d, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x4d,
	0x65, 0x74, 0x68, 0x6f, 0x64, 0x12, 0x2a, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18,
	0x0a, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x12, 0x2e, 0x73, 0x68, 0x6f, 0x70, 0x2e, 0x4f, 0x72, 0x64,
	0x65, 0x72, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x12, 0x35, 0x0a, 0x08, 0x61, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x73, 0x18, 0x0b, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x73, 0x68, 0x6f, 0x70, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72,
	0x2e, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x08,
	0x61, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x73, 0x12, 0x10, 0x0a, 0x03, 0x73, 0x75, 0x6d, 0x18,
	0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x73, 0x75, 0x6d, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f,
	0x6b, 0x65, 0x6e, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e,
	0x1a, 0xf4, 0x01, 0x0a, 0x0d, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x41, 0x6d, 0x6f, 0x75,
	0x6e, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x61, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x61, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x49,
	0x64, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74,
	0x6c, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12,
	0x14, 0x0a, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x70, 0x72, 0x69, 0x63, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x27, 0x0a, 0x07, 0x64,
	0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x73,
	0x68, 0x6f, 0x70, 0x2e, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x52, 0x07, 0x64, 0x65, 0x74,
	0x61, 0x69, 0x6c, 0x73, 0x12, 0x22, 0x0a, 0x0d, 0x62, 0x61, 0x73, 0x65, 0x5f, 0x70, 0x72, 0x69,
	0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x62, 0x61, 0x73,
	0x65, 0x50, 0x72, 0x69, 0x63, 0x65, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x76, 0x61, 0x72, 0x69,
	0x61, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x76, 0x61,
	0x72, 0x69, 0x61, 0x6e, 0x74, 0x49, 0x64, 0x22, 0x44, 0x0a, 0x0d, 0x50, 0x61, 0x79, 0x6d, 0x65,
	0x6e, 0x74, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x12, 0x14, 0x0a, 0x10, 0x43, 0x41, 0x53, 0x48,
	0x5f, 0x4f, 0x4e, 0x5f, 0x44, 0x45, 0x4c, 0x49, 0x56, 0x45, 0x52, 0x59, 0x10, 0x00, 0x12, 0x11,
	0x0a, 0x0d, 0x42, 0x41, 0x4e, 0x4b, 0x5f, 0x54, 0x52, 0x41, 0x4e, 0x53, 0x46, 0x45, 0x52, 0x10,
	0x01, 0x12, 0x0a, 0x0a, 0x06, 0x4f, 0x4e, 0x4c, 0x49, 0x4e, 0x45, 0x10, 0x02, 0x22, 0x2b, 0x0a,
	0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x08, 0x0a, 0x04, 0x4f, 0x50, 0x45, 0x4e, 0x10,
	0x00, 0x12, 0x08, 0x0a, 0x04, 0x53, 0x45, 0x4e, 0x54, 0x10, 0x01, 0x12, 0x0d, 0x0a, 0x09, 0x43,
	0x4f, 0x4d, 0x50, 0x4c, 0x45, 0x54, 0x45, 0x44, 0x10, 0x02, 0x22, 0x46, 0x0a, 0x07, 0x4f, 0x72,
	0x64, 0x65, 0x72, 0x49, 0x44, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x02, 0x69, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x65, 0x6e, 0x76, 0x5f, 0x6b, 0x65, 0x79,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x65, 0x6e, 0x76, 0x4b, 0x65, 0x79, 0x12, 0x12,
	0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x64, 0x61,
	0x74, 0x61, 0x22, 0x9b, 0x01, 0x0a, 0x13, 0x4c, 0x69, 0x73, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72,
	0x43, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x38, 0x0a, 0x06, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x20, 0x2e, 0x73, 0x68, 0x6f,
	0x70, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x43, 0x6f, 0x6e, 0x64, 0x69,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x22, 0x34, 0x0a, 0x06, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x12, 0x07, 0x0a, 0x03, 0x41, 0x4e, 0x59, 0x10, 0x00, 0x12, 0x08, 0x0a,
	0x04, 0x4f, 0x50, 0x45, 0x4e, 0x10, 0x01, 0x12, 0x08, 0x0a, 0x04, 0x53, 0x45, 0x4e, 0x54, 0x10,
	0x02, 0x12, 0x0d, 0x0a, 0x09, 0x43, 0x4f, 0x4d, 0x50, 0x4c, 0x45, 0x54, 0x45, 0x44, 0x10, 0x03,
	0x22, 0x2c, 0x0a, 0x09, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x1f, 0x0a,
	0x04, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x73, 0x68,
	0x6f, 0x70, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x22, 0x9c,
	0x01, 0x0a, 0x08, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x12, 0x34, 0x0a, 0x07, 0x63,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x64, 0x12, 0x34, 0x0a, 0x07, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x07,
	0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x61, 0x62, 0x65, 0x6c,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x22, 0x48, 0x0a,
	0x0c, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x22, 0x0a,
	0x04, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x73, 0x68,
	0x6f, 0x70, 0x2e, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x52, 0x04, 0x6c, 0x69, 0x73,
	0x74, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x22, 0x50, 0x0a, 0x16, 0x43, 0x61, 0x74, 0x65, 0x67,
	0x6f, 0x72, 0x79, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x12, 0x36, 0x0a, 0x17, 0x6f, 0x6e, 0x6c, 0x79, 0x5f, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x73,
	0x68, 0x65, 0x64, 0x5f, 0x61, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x73, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x15, 0x6f, 0x6e, 0x6c, 0x79, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x65,
	0x64, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x73, 0x22, 0x20, 0x0a, 0x0a, 0x54, 0x65, 0x78,
	0x74, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x65, 0x78, 0x74, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x65, 0x78, 0x74, 0x22, 0x65, 0x0a, 0x0e, 0x53,
	0x75, 0x67, 0x67, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x2a, 0x0a,
	0x08, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x0e, 0x2e, 0x73, 0x68, 0x6f, 0x70, 0x2e, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x52,
	0x08, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x12, 0x27, 0x0a, 0x07, 0x41, 0x72, 0x74,
	0x69, 0x63, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x73, 0x68, 0x6f,
	0x70, 0x2e, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x52, 0x07, 0x41, 0x72, 0x74, 0x69, 0x63,
	0x6c, 0x65, 0x22, 0x8d, 0x01, 0x0a, 0x07, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12,
	0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x68, 0x6f, 0x6e,
	0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x12, 0x18,
	0x0a, 0x07, 0x73, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x73, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x22, 0x1b, 0x0a, 0x09, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x49, 0x44, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x2a,
	0x3e, 0x0a, 0x0b, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x12, 0x0a,
	0x0a, 0x06, 0x4d, 0x44, 0x5f, 0x41, 0x4c, 0x4c, 0x10, 0x00, 0x12, 0x09, 0x0a, 0x05, 0x4d, 0x44,
	0x5f, 0x49, 0x44, 0x10, 0x01, 0x12, 0x0c, 0x0a, 0x08, 0x4d, 0x44, 0x5f, 0x4c, 0x41, 0x42, 0x45,
	0x4c, 0x10, 0x02, 0x12, 0x0a, 0x0a, 0x06, 0x4d, 0x44, 0x5f, 0x55, 0x52, 0x4c, 0x10, 0x03, 0x2a,
	0x64, 0x0a, 0x0f, 0x42, 0x61, 0x73, 0x65, 0x50, 0x72, 0x69, 0x63, 0x65, 0x46, 0x69, 0x65, 0x6c,
	0x64, 0x73, 0x12, 0x0a, 0x0a, 0x06, 0x42, 0x50, 0x5f, 0x41, 0x4c, 0x4c, 0x10, 0x00, 0x12, 0x09,
	0x0a, 0x05, 0x42, 0x50, 0x5f, 0x49, 0x44, 0x10, 0x01, 0x12, 0x0e, 0x0a, 0x0a, 0x42, 0x50, 0x5f,
	0x43, 0x52, 0x45, 0x41, 0x54, 0x45, 0x44, 0x10, 0x02, 0x12, 0x0e, 0x0a, 0x0a, 0x42, 0x50, 0x5f,
	0x55, 0x50, 0x44, 0x41, 0x54, 0x45, 0x44, 0x10, 0x03, 0x12, 0x0c, 0x0a, 0x08, 0x42, 0x50, 0x5f,
	0x4c, 0x41, 0x42, 0x45, 0x4c, 0x10, 0x04, 0x12, 0x0c, 0x0a, 0x08, 0x42, 0x50, 0x5f, 0x50, 0x52,
	0x49, 0x43, 0x45, 0x10, 0x05, 0x2a, 0x6e, 0x0a, 0x0d, 0x56, 0x61, 0x72, 0x69, 0x61, 0x6e, 0x74,
	0x46, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x12, 0x0b, 0x0a, 0x07, 0x56, 0x52, 0x54, 0x5f, 0x41, 0x4c,
	0x4c, 0x10, 0x00, 0x12, 0x0a, 0x0a, 0x06, 0x56, 0x52, 0x54, 0x5f, 0x49, 0x44, 0x10, 0x01, 0x12,
	0x0f, 0x0a, 0x0b, 0x56, 0x52, 0x54, 0x5f, 0x43, 0x52, 0x45, 0x41, 0x54, 0x45, 0x44, 0x10, 0x02,
	0x12, 0x0f, 0x0a, 0x0b, 0x56, 0x52, 0x54, 0x5f, 0x55, 0x50, 0x44, 0x41, 0x54, 0x45, 0x44, 0x10,
	0x03, 0x12, 0x0e, 0x0a, 0x0a, 0x56, 0x52, 0x54, 0x5f, 0x4c, 0x41, 0x42, 0x45, 0x4c, 0x53, 0x10,
	0x04, 0x12, 0x12, 0x0a, 0x0e, 0x56, 0x52, 0x54, 0x5f, 0x4d, 0x55, 0x4c, 0x54, 0x49, 0x50, 0x4c,
	0x49, 0x45, 0x52, 0x10, 0x05, 0x2a, 0x8a, 0x01, 0x0a, 0x0d, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c,
	0x65, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x12, 0x07, 0x0a, 0x03, 0x41, 0x4c, 0x4c, 0x10, 0x00,
	0x12, 0x06, 0x0a, 0x02, 0x49, 0x44, 0x10, 0x01, 0x12, 0x0b, 0x0a, 0x07, 0x43, 0x52, 0x45, 0x41,
	0x54, 0x45, 0x44, 0x10, 0x02, 0x12, 0x0b, 0x0a, 0x07, 0x55, 0x50, 0x44, 0x41, 0x54, 0x45, 0x44,
	0x10, 0x03, 0x12, 0x0d, 0x0a, 0x09, 0x50, 0x55, 0x42, 0x4c, 0x49, 0x53, 0x48, 0x45, 0x44, 0x10,
	0x04, 0x12, 0x09, 0x0a, 0x05, 0x54, 0x49, 0x54, 0x4c, 0x45, 0x10, 0x05, 0x12, 0x0f, 0x0a, 0x0b,
	0x44, 0x45, 0x53, 0x43, 0x52, 0x49, 0x50, 0x54, 0x49, 0x4f, 0x4e, 0x10, 0x06, 0x12, 0x09, 0x0a,
	0x05, 0x50, 0x52, 0x49, 0x43, 0x45, 0x10, 0x07, 0x12, 0x0c, 0x0a, 0x08, 0x50, 0x52, 0x4f, 0x4d,
	0x4f, 0x54, 0x45, 0x44, 0x10, 0x0b, 0x22, 0x04, 0x08, 0x08, 0x10, 0x0a, 0x22, 0x04, 0x08, 0x0c,
	0x10, 0x0e, 0x2a, 0x5a, 0x0a, 0x0e, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x46, 0x69,
	0x65, 0x6c, 0x64, 0x73, 0x12, 0x0b, 0x0a, 0x07, 0x43, 0x41, 0x54, 0x5f, 0x41, 0x4c, 0x4c, 0x10,
	0x00, 0x12, 0x0a, 0x0a, 0x06, 0x43, 0x41, 0x54, 0x5f, 0x49, 0x44, 0x10, 0x01, 0x12, 0x0f, 0x0a,
	0x0b, 0x43, 0x41, 0x54, 0x5f, 0x43, 0x52, 0x45, 0x41, 0x54, 0x45, 0x44, 0x10, 0x02, 0x12, 0x0f,
	0x0a, 0x0b, 0x43, 0x41, 0x54, 0x5f, 0x55, 0x50, 0x44, 0x41, 0x54, 0x45, 0x44, 0x10, 0x03, 0x12,
	0x0d, 0x0a, 0x09, 0x43, 0x41, 0x54, 0x5f, 0x4c, 0x41, 0x42, 0x45, 0x4c, 0x10, 0x04, 0x32, 0xba,
	0x06, 0x0a, 0x04, 0x53, 0x68, 0x6f, 0x70, 0x12, 0x2f, 0x0a, 0x0b, 0x53, 0x61, 0x76, 0x65, 0x41,
	0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x12, 0x0d, 0x2e, 0x73, 0x68, 0x6f, 0x70, 0x2e, 0x41, 0x72,
	0x74, 0x69, 0x63, 0x6c, 0x65, 0x1a, 0x0f, 0x2e, 0x73, 0x68, 0x6f, 0x70, 0x2e, 0x41, 0x72, 0x74,
	0x69, 0x63, 0x6c, 0x65, 0x49, 0x44, 0x22, 0x00, 0x12, 0x2f, 0x0a, 0x0b, 0x56, 0x69, 0x65, 0x77,
	0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x12, 0x0f, 0x2e, 0x73, 0x68, 0x6f, 0x70, 0x2e, 0x41,
	0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x49, 0x44, 0x1a, 0x0d, 0x2e, 0x73, 0x68, 0x6f, 0x70, 0x2e,
	0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x22, 0x00, 0x12, 0x39, 0x0a, 0x0c, 0x4c, 0x69, 0x73,
	0x74, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x73, 0x12, 0x14, 0x2e, 0x73, 0x68, 0x6f, 0x70,
	0x2e, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x1a,
	0x11, 0x2e, 0x73, 0x68, 0x6f, 0x70, 0x2e, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x4c, 0x69,
	0x73, 0x74, 0x22, 0x00, 0x12, 0x31, 0x0a, 0x0d, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x41, 0x72,
	0x74, 0x69, 0x63, 0x6c, 0x65, 0x12, 0x0f, 0x2e, 0x73, 0x68, 0x6f, 0x70, 0x2e, 0x41, 0x72, 0x74,
	0x69, 0x63, 0x6c, 0x65, 0x49, 0x44, 0x1a, 0x0d, 0x2e, 0x73, 0x68, 0x6f, 0x70, 0x2e, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x64, 0x22, 0x00, 0x12, 0x28, 0x0a, 0x08, 0x43, 0x68, 0x65, 0x63, 0x6b,
	0x6f, 0x75, 0x74, 0x12, 0x0b, 0x2e, 0x73, 0x68, 0x6f, 0x70, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72,
	0x1a, 0x0d, 0x2e, 0x73, 0x68, 0x6f, 0x70, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x44, 0x22,
	0x00, 0x12, 0x3a, 0x0a, 0x0a, 0x4c, 0x69, 0x73, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x73, 0x12,
	0x19, 0x2e, 0x73, 0x68, 0x6f, 0x70, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72,
	0x43, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x1a, 0x0f, 0x2e, 0x73, 0x68, 0x6f,
	0x70, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x22, 0x00, 0x12, 0x29, 0x0a,
	0x09, 0x53, 0x61, 0x76, 0x65, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x12, 0x0b, 0x2e, 0x73, 0x68, 0x6f,
	0x70, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x1a, 0x0d, 0x2e, 0x73, 0x68, 0x6f, 0x70, 0x2e, 0x4f,
	0x72, 0x64, 0x65, 0x72, 0x49, 0x44, 0x22, 0x00, 0x12, 0x3a, 0x0a, 0x0e, 0x53, 0x61, 0x76, 0x65,
	0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x69, 0x65, 0x73, 0x12, 0x12, 0x2e, 0x73, 0x68, 0x6f,
	0x70, 0x2e, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x4c, 0x69, 0x73, 0x74, 0x1a, 0x12,
	0x2e, 0x73, 0x68, 0x6f, 0x70, 0x2e, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x4c, 0x69,
	0x73, 0x74, 0x22, 0x00, 0x12, 0x44, 0x0a, 0x0e, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x61, 0x74, 0x65,
	0x67, 0x6f, 0x72, 0x69, 0x65, 0x73, 0x12, 0x1c, 0x2e, 0x73, 0x68, 0x6f, 0x70, 0x2e, 0x43, 0x61,
	0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x6f, 0x6e, 0x64, 0x69, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x1a, 0x12, 0x2e, 0x73, 0x68, 0x6f, 0x70, 0x2e, 0x43, 0x61, 0x74, 0x65,
	0x67, 0x6f, 0x72, 0x79, 0x4c, 0x69, 0x73, 0x74, 0x22, 0x00, 0x12, 0x37, 0x0a, 0x0e, 0x53, 0x65,
	0x61, 0x72, 0x63, 0x68, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x73, 0x12, 0x10, 0x2e, 0x73,
	0x68, 0x6f, 0x70, 0x2e, 0x54, 0x65, 0x78, 0x74, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x1a, 0x11,
	0x2e, 0x73, 0x68, 0x6f, 0x70, 0x2e, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x4c, 0x69, 0x73,
	0x74, 0x22, 0x00, 0x12, 0x33, 0x0a, 0x07, 0x53, 0x75, 0x67, 0x67, 0x65, 0x73, 0x74, 0x12, 0x10,
	0x2e, 0x73, 0x68, 0x6f, 0x70, 0x2e, 0x54, 0x65, 0x78, 0x74, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68,
	0x1a, 0x14, 0x2e, 0x73, 0x68, 0x6f, 0x70, 0x2e, 0x53, 0x75, 0x67, 0x67, 0x65, 0x73, 0x74, 0x69,
	0x6f, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x22, 0x00, 0x12, 0x33, 0x0a, 0x0d, 0x53, 0x61, 0x76, 0x65,
	0x42, 0x61, 0x73, 0x65, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x0f, 0x2e, 0x73, 0x68, 0x6f, 0x70,
	0x2e, 0x42, 0x61, 0x73, 0x65, 0x50, 0x72, 0x69, 0x63, 0x65, 0x1a, 0x0f, 0x2e, 0x73, 0x68, 0x6f,
	0x70, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x50, 0x72, 0x69, 0x63, 0x65, 0x22, 0x00, 0x12, 0x33, 0x0a,
	0x0f, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x42, 0x61, 0x73, 0x65, 0x50, 0x72, 0x69, 0x63, 0x65,
	0x12, 0x0f, 0x2e, 0x73, 0x68, 0x6f, 0x70, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x50, 0x72, 0x69, 0x63,
	0x65, 0x1a, 0x0d, 0x2e, 0x73, 0x68, 0x6f, 0x70, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64,
	0x22, 0x00, 0x12, 0x46, 0x0a, 0x0f, 0x4c, 0x69, 0x73, 0x74, 0x42, 0x61, 0x73, 0x65, 0x73, 0x50,
	0x72, 0x69, 0x63, 0x65, 0x73, 0x12, 0x1c, 0x2e, 0x73, 0x68, 0x6f, 0x70, 0x2e, 0x42, 0x61, 0x73,
	0x65, 0x50, 0x72, 0x69, 0x63, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x6f, 0x6e, 0x64, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x1a, 0x13, 0x2e, 0x73, 0x68, 0x6f, 0x70, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x50,
	0x72, 0x69, 0x63, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x22, 0x00, 0x12, 0x2f, 0x0a, 0x0b, 0x53, 0x65,
	0x6e, 0x64, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x0d, 0x2e, 0x73, 0x68, 0x6f, 0x70,
	0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x1a, 0x0f, 0x2e, 0x73, 0x68, 0x6f, 0x70, 0x2e,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x49, 0x44, 0x22, 0x00, 0x42, 0x18, 0x5a, 0x16, 0x67,
	0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x6d, 0x6f, 0x61, 0x70, 0x69, 0x73,
	0x2f, 0x73, 0x68, 0x6f, 0x70, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_shop_proto_rawDescOnce sync.Once
	file_shop_proto_rawDescData = file_shop_proto_rawDesc
)

func file_shop_proto_rawDescGZIP() []byte {
	file_shop_proto_rawDescOnce.Do(func() {
		file_shop_proto_rawDescData = protoimpl.X.CompressGZIP(file_shop_proto_rawDescData)
	})
	return file_shop_proto_rawDescData
}

var file_shop_proto_enumTypes = make([]protoimpl.EnumInfo, 8)
var file_shop_proto_msgTypes = make([]protoimpl.MessageInfo, 25)
var file_shop_proto_goTypes = []interface{}{
	(MediaFields)(0),                // 0: shop.MediaFields
	(BasePriceFields)(0),            // 1: shop.BasePriceFields
	(VariantFields)(0),              // 2: shop.VariantFields
	(ArticleFields)(0),              // 3: shop.ArticleFields
	(CategoryFields)(0),             // 4: shop.CategoryFields
	(Order_PaymentMethod)(0),        // 5: shop.Order.PaymentMethod
	(Order_Status)(0),               // 6: shop.Order.Status
	(ListOrderConditions_Status)(0), // 7: shop.ListOrderConditions.Status
	(*ArticleID)(nil),               // 8: shop.ArticleID
	(*Media)(nil),                   // 9: shop.Media
	(*BasePrice)(nil),               // 10: shop.BasePrice
	(*BasePriceListCondtions)(nil),  // 11: shop.BasePriceListCondtions
	(*BasePriceList)(nil),           // 12: shop.BasePriceList
	(*Variant)(nil),                 // 13: shop.Variant
	(*Details)(nil),                 // 14: shop.Details
	(*Article)(nil),                 // 15: shop.Article
	(*ArticleRelations)(nil),        // 16: shop.ArticleRelations
	(*Limits)(nil),                  // 17: shop.Limits
	(*ListConditions)(nil),          // 18: shop.ListConditions
	(*ArticleList)(nil),             // 19: shop.ArticleList
	(*Deleted)(nil),                 // 20: shop.Deleted
	(*Order)(nil),                   // 21: shop.Order
	(*OrderID)(nil),                 // 22: shop.OrderID
	(*ListOrderConditions)(nil),     // 23: shop.ListOrderConditions
	(*OrderList)(nil),               // 24: shop.OrderList
	(*Category)(nil),                // 25: shop.Category
	(*CategoryList)(nil),            // 26: shop.CategoryList
	(*CategoryListConditions)(nil),  // 27: shop.CategoryListConditions
	(*TextSearch)(nil),              // 28: shop.TextSearch
	(*SuggestionList)(nil),          // 29: shop.SuggestionList
	(*Message)(nil),                 // 30: shop.Message
	(*MessageID)(nil),               // 31: shop.MessageID
	(*Order_ArticleAmount)(nil),     // 32: shop.Order.ArticleAmount
	(*timestamp.Timestamp)(nil),     // 33: google.protobuf.Timestamp
}
var file_shop_proto_depIdxs = []int32{
	33, // 0: shop.BasePrice.created:type_name -> google.protobuf.Timestamp
	33, // 1: shop.BasePrice.updated:type_name -> google.protobuf.Timestamp
	10, // 2: shop.BasePriceList.list:type_name -> shop.BasePrice
	33, // 3: shop.Variant.created:type_name -> google.protobuf.Timestamp
	33, // 4: shop.Variant.updated:type_name -> google.protobuf.Timestamp
	10, // 5: shop.Details.base_price:type_name -> shop.BasePrice
	13, // 6: shop.Details.variant:type_name -> shop.Variant
	33, // 7: shop.Article.created:type_name -> google.protobuf.Timestamp
	33, // 8: shop.Article.updated:type_name -> google.protobuf.Timestamp
	9,  // 9: shop.Article.images:type_name -> shop.Media
	9,  // 10: shop.Article.videos:type_name -> shop.Media
	25, // 11: shop.Article.categories:type_name -> shop.Category
	10, // 12: shop.Article.baseprices:type_name -> shop.BasePrice
	13, // 13: shop.Article.variants:type_name -> shop.Variant
	0,  // 14: shop.ArticleRelations.images:type_name -> shop.MediaFields
	0,  // 15: shop.ArticleRelations.videos:type_name -> shop.MediaFields
	4,  // 16: shop.ArticleRelations.categories:type_name -> shop.CategoryFields
	1,  // 17: shop.ArticleRelations.baseprices:type_name -> shop.BasePriceFields
	2,  // 18: shop.ArticleRelations.variants:type_name -> shop.VariantFields
	3,  // 19: shop.ListConditions.fields:type_name -> shop.ArticleFields
	16, // 20: shop.ListConditions.relations:type_name -> shop.ArticleRelations
	17, // 21: shop.ListConditions.limits:type_name -> shop.Limits
	15, // 22: shop.ArticleList.list:type_name -> shop.Article
	33, // 23: shop.Order.created:type_name -> google.protobuf.Timestamp
	33, // 24: shop.Order.updated:type_name -> google.protobuf.Timestamp
	5,  // 25: shop.Order.payment_method:type_name -> shop.Order.PaymentMethod
	6,  // 26: shop.Order.status:type_name -> shop.Order.Status
	32, // 27: shop.Order.articles:type_name -> shop.Order.ArticleAmount
	7,  // 28: shop.ListOrderConditions.status:type_name -> shop.ListOrderConditions.Status
	21, // 29: shop.OrderList.list:type_name -> shop.Order
	33, // 30: shop.Category.created:type_name -> google.protobuf.Timestamp
	33, // 31: shop.Category.updated:type_name -> google.protobuf.Timestamp
	25, // 32: shop.CategoryList.list:type_name -> shop.Category
	25, // 33: shop.SuggestionList.Category:type_name -> shop.Category
	15, // 34: shop.SuggestionList.Article:type_name -> shop.Article
	14, // 35: shop.Order.ArticleAmount.details:type_name -> shop.Details
	15, // 36: shop.Shop.SaveArticle:input_type -> shop.Article
	8,  // 37: shop.Shop.ViewArticle:input_type -> shop.ArticleID
	18, // 38: shop.Shop.ListArticles:input_type -> shop.ListConditions
	8,  // 39: shop.Shop.DeleteArticle:input_type -> shop.ArticleID
	21, // 40: shop.Shop.Checkout:input_type -> shop.Order
	23, // 41: shop.Shop.ListOrders:input_type -> shop.ListOrderConditions
	21, // 42: shop.Shop.SaveOrder:input_type -> shop.Order
	26, // 43: shop.Shop.SaveCategories:input_type -> shop.CategoryList
	27, // 44: shop.Shop.ListCategories:input_type -> shop.CategoryListConditions
	28, // 45: shop.Shop.SearchArticles:input_type -> shop.TextSearch
	28, // 46: shop.Shop.Suggest:input_type -> shop.TextSearch
	10, // 47: shop.Shop.SaveBasePrice:input_type -> shop.BasePrice
	10, // 48: shop.Shop.DeleteBasePrice:input_type -> shop.BasePrice
	11, // 49: shop.Shop.ListBasesPrices:input_type -> shop.BasePriceListCondtions
	30, // 50: shop.Shop.SendMessage:input_type -> shop.Message
	8,  // 51: shop.Shop.SaveArticle:output_type -> shop.ArticleID
	15, // 52: shop.Shop.ViewArticle:output_type -> shop.Article
	19, // 53: shop.Shop.ListArticles:output_type -> shop.ArticleList
	20, // 54: shop.Shop.DeleteArticle:output_type -> shop.Deleted
	22, // 55: shop.Shop.Checkout:output_type -> shop.OrderID
	24, // 56: shop.Shop.ListOrders:output_type -> shop.OrderList
	22, // 57: shop.Shop.SaveOrder:output_type -> shop.OrderID
	26, // 58: shop.Shop.SaveCategories:output_type -> shop.CategoryList
	26, // 59: shop.Shop.ListCategories:output_type -> shop.CategoryList
	19, // 60: shop.Shop.SearchArticles:output_type -> shop.ArticleList
	29, // 61: shop.Shop.Suggest:output_type -> shop.SuggestionList
	10, // 62: shop.Shop.SaveBasePrice:output_type -> shop.BasePrice
	20, // 63: shop.Shop.DeleteBasePrice:output_type -> shop.Deleted
	12, // 64: shop.Shop.ListBasesPrices:output_type -> shop.BasePriceList
	31, // 65: shop.Shop.SendMessage:output_type -> shop.MessageID
	51, // [51:66] is the sub-list for method output_type
	36, // [36:51] is the sub-list for method input_type
	36, // [36:36] is the sub-list for extension type_name
	36, // [36:36] is the sub-list for extension extendee
	0,  // [0:36] is the sub-list for field type_name
}

func init() { file_shop_proto_init() }
func file_shop_proto_init() {
	if File_shop_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_shop_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ArticleID); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_shop_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Media); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_shop_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BasePrice); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_shop_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BasePriceListCondtions); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_shop_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BasePriceList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_shop_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Variant); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_shop_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Details); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_shop_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Article); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_shop_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ArticleRelations); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_shop_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Limits); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_shop_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListConditions); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_shop_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ArticleList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_shop_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Deleted); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_shop_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Order); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_shop_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OrderID); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_shop_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListOrderConditions); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_shop_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OrderList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_shop_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Category); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_shop_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CategoryList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_shop_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CategoryListConditions); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_shop_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TextSearch); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_shop_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SuggestionList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_shop_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Message); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_shop_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MessageID); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_shop_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Order_ArticleAmount); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_shop_proto_rawDesc,
			NumEnums:      8,
			NumMessages:   25,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_shop_proto_goTypes,
		DependencyIndexes: file_shop_proto_depIdxs,
		EnumInfos:         file_shop_proto_enumTypes,
		MessageInfos:      file_shop_proto_msgTypes,
	}.Build()
	File_shop_proto = out.File
	file_shop_proto_rawDesc = nil
	file_shop_proto_goTypes = nil
	file_shop_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// ShopClient is the client API for Shop service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ShopClient interface {
	// SaveArticle updates an article identified by ID.
	// If ID is unset (0) a new article is insered.
	// On success the affected article ID is returned.
	SaveArticle(ctx context.Context, in *Article, opts ...grpc.CallOption) (*ArticleID, error)
	// ViewArticle identied by ID.
	ViewArticle(ctx context.Context, in *ArticleID, opts ...grpc.CallOption) (*Article, error)
	// ListArticles filtered by ListCondtions.
	ListArticles(ctx context.Context, in *ListConditions, opts ...grpc.CallOption) (*ArticleList, error)
	// DeleteArticle and all associated images and videos
	DeleteArticle(ctx context.Context, in *ArticleID, opts ...grpc.CallOption) (*Deleted, error)
	// Checkout an order of articles
	Checkout(ctx context.Context, in *Order, opts ...grpc.CallOption) (*OrderID, error)
	// ListOrders returns all orders
	ListOrders(ctx context.Context, in *ListOrderConditions, opts ...grpc.CallOption) (*OrderList, error)
	// SaveOrder updates the order identified by ID.
	// It is not (yet) possibile to change the articles on an order.
	SaveOrder(ctx context.Context, in *Order, opts ...grpc.CallOption) (*OrderID, error)
	// SaveCategories upserts the categories in the provided CategoryList.
	// Returned CategoryList is always in the same order as the provided one.
	//
	// New articles should have their ID field set to 0.
	// Those IDs will be populated in the reponse.
	// Existing categories should always keep the same ID
	// and is used for updates and re-sorting.
	SaveCategories(ctx context.Context, in *CategoryList, opts ...grpc.CallOption) (*CategoryList, error)
	// ListCategories returns all categories, filtered by CategoryListConditions.
	// Returned CategoryList is always in the same order as passed to SaveCategories.
	ListCategories(ctx context.Context, in *CategoryListConditions, opts ...grpc.CallOption) (*CategoryList, error)
	// SearchArticles returns ArticleList that matches TextSearch.value.
	SearchArticles(ctx context.Context, in *TextSearch, opts ...grpc.CallOption) (*ArticleList, error)
	// Suggest returns a list of matching articles and categories
	Suggest(ctx context.Context, in *TextSearch, opts ...grpc.CallOption) (*SuggestionList, error)
	// SaveBasePrice updates a base price identified by ID.
	// If ID is unset (0) a new base price is insered.
	// On success the affected base price is returned with its ID populated.
	SaveBasePrice(ctx context.Context, in *BasePrice, opts ...grpc.CallOption) (*BasePrice, error)
	// DeleteBasePrice dis-assosiates all articles and deleted the given BasePrice
	DeleteBasePrice(ctx context.Context, in *BasePrice, opts ...grpc.CallOption) (*Deleted, error)
	// ListBasePrices returns all base prices.
	ListBasesPrices(ctx context.Context, in *BasePriceListCondtions, opts ...grpc.CallOption) (*BasePriceList, error)
	// SendMessage sends an email message to the site admin
	SendMessage(ctx context.Context, in *Message, opts ...grpc.CallOption) (*MessageID, error)
}

type shopClient struct {
	cc grpc.ClientConnInterface
}

func NewShopClient(cc grpc.ClientConnInterface) ShopClient {
	return &shopClient{cc}
}

func (c *shopClient) SaveArticle(ctx context.Context, in *Article, opts ...grpc.CallOption) (*ArticleID, error) {
	out := new(ArticleID)
	err := c.cc.Invoke(ctx, "/shop.Shop/SaveArticle", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *shopClient) ViewArticle(ctx context.Context, in *ArticleID, opts ...grpc.CallOption) (*Article, error) {
	out := new(Article)
	err := c.cc.Invoke(ctx, "/shop.Shop/ViewArticle", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *shopClient) ListArticles(ctx context.Context, in *ListConditions, opts ...grpc.CallOption) (*ArticleList, error) {
	out := new(ArticleList)
	err := c.cc.Invoke(ctx, "/shop.Shop/ListArticles", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *shopClient) DeleteArticle(ctx context.Context, in *ArticleID, opts ...grpc.CallOption) (*Deleted, error) {
	out := new(Deleted)
	err := c.cc.Invoke(ctx, "/shop.Shop/DeleteArticle", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *shopClient) Checkout(ctx context.Context, in *Order, opts ...grpc.CallOption) (*OrderID, error) {
	out := new(OrderID)
	err := c.cc.Invoke(ctx, "/shop.Shop/Checkout", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *shopClient) ListOrders(ctx context.Context, in *ListOrderConditions, opts ...grpc.CallOption) (*OrderList, error) {
	out := new(OrderList)
	err := c.cc.Invoke(ctx, "/shop.Shop/ListOrders", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *shopClient) SaveOrder(ctx context.Context, in *Order, opts ...grpc.CallOption) (*OrderID, error) {
	out := new(OrderID)
	err := c.cc.Invoke(ctx, "/shop.Shop/SaveOrder", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *shopClient) SaveCategories(ctx context.Context, in *CategoryList, opts ...grpc.CallOption) (*CategoryList, error) {
	out := new(CategoryList)
	err := c.cc.Invoke(ctx, "/shop.Shop/SaveCategories", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *shopClient) ListCategories(ctx context.Context, in *CategoryListConditions, opts ...grpc.CallOption) (*CategoryList, error) {
	out := new(CategoryList)
	err := c.cc.Invoke(ctx, "/shop.Shop/ListCategories", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *shopClient) SearchArticles(ctx context.Context, in *TextSearch, opts ...grpc.CallOption) (*ArticleList, error) {
	out := new(ArticleList)
	err := c.cc.Invoke(ctx, "/shop.Shop/SearchArticles", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *shopClient) Suggest(ctx context.Context, in *TextSearch, opts ...grpc.CallOption) (*SuggestionList, error) {
	out := new(SuggestionList)
	err := c.cc.Invoke(ctx, "/shop.Shop/Suggest", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *shopClient) SaveBasePrice(ctx context.Context, in *BasePrice, opts ...grpc.CallOption) (*BasePrice, error) {
	out := new(BasePrice)
	err := c.cc.Invoke(ctx, "/shop.Shop/SaveBasePrice", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *shopClient) DeleteBasePrice(ctx context.Context, in *BasePrice, opts ...grpc.CallOption) (*Deleted, error) {
	out := new(Deleted)
	err := c.cc.Invoke(ctx, "/shop.Shop/DeleteBasePrice", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *shopClient) ListBasesPrices(ctx context.Context, in *BasePriceListCondtions, opts ...grpc.CallOption) (*BasePriceList, error) {
	out := new(BasePriceList)
	err := c.cc.Invoke(ctx, "/shop.Shop/ListBasesPrices", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *shopClient) SendMessage(ctx context.Context, in *Message, opts ...grpc.CallOption) (*MessageID, error) {
	out := new(MessageID)
	err := c.cc.Invoke(ctx, "/shop.Shop/SendMessage", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ShopServer is the server API for Shop service.
type ShopServer interface {
	// SaveArticle updates an article identified by ID.
	// If ID is unset (0) a new article is insered.
	// On success the affected article ID is returned.
	SaveArticle(context.Context, *Article) (*ArticleID, error)
	// ViewArticle identied by ID.
	ViewArticle(context.Context, *ArticleID) (*Article, error)
	// ListArticles filtered by ListCondtions.
	ListArticles(context.Context, *ListConditions) (*ArticleList, error)
	// DeleteArticle and all associated images and videos
	DeleteArticle(context.Context, *ArticleID) (*Deleted, error)
	// Checkout an order of articles
	Checkout(context.Context, *Order) (*OrderID, error)
	// ListOrders returns all orders
	ListOrders(context.Context, *ListOrderConditions) (*OrderList, error)
	// SaveOrder updates the order identified by ID.
	// It is not (yet) possibile to change the articles on an order.
	SaveOrder(context.Context, *Order) (*OrderID, error)
	// SaveCategories upserts the categories in the provided CategoryList.
	// Returned CategoryList is always in the same order as the provided one.
	//
	// New articles should have their ID field set to 0.
	// Those IDs will be populated in the reponse.
	// Existing categories should always keep the same ID
	// and is used for updates and re-sorting.
	SaveCategories(context.Context, *CategoryList) (*CategoryList, error)
	// ListCategories returns all categories, filtered by CategoryListConditions.
	// Returned CategoryList is always in the same order as passed to SaveCategories.
	ListCategories(context.Context, *CategoryListConditions) (*CategoryList, error)
	// SearchArticles returns ArticleList that matches TextSearch.value.
	SearchArticles(context.Context, *TextSearch) (*ArticleList, error)
	// Suggest returns a list of matching articles and categories
	Suggest(context.Context, *TextSearch) (*SuggestionList, error)
	// SaveBasePrice updates a base price identified by ID.
	// If ID is unset (0) a new base price is insered.
	// On success the affected base price is returned with its ID populated.
	SaveBasePrice(context.Context, *BasePrice) (*BasePrice, error)
	// DeleteBasePrice dis-assosiates all articles and deleted the given BasePrice
	DeleteBasePrice(context.Context, *BasePrice) (*Deleted, error)
	// ListBasePrices returns all base prices.
	ListBasesPrices(context.Context, *BasePriceListCondtions) (*BasePriceList, error)
	// SendMessage sends an email message to the site admin
	SendMessage(context.Context, *Message) (*MessageID, error)
}

// UnimplementedShopServer can be embedded to have forward compatible implementations.
type UnimplementedShopServer struct {
}

func (*UnimplementedShopServer) SaveArticle(context.Context, *Article) (*ArticleID, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SaveArticle not implemented")
}
func (*UnimplementedShopServer) ViewArticle(context.Context, *ArticleID) (*Article, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ViewArticle not implemented")
}
func (*UnimplementedShopServer) ListArticles(context.Context, *ListConditions) (*ArticleList, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListArticles not implemented")
}
func (*UnimplementedShopServer) DeleteArticle(context.Context, *ArticleID) (*Deleted, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteArticle not implemented")
}
func (*UnimplementedShopServer) Checkout(context.Context, *Order) (*OrderID, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Checkout not implemented")
}
func (*UnimplementedShopServer) ListOrders(context.Context, *ListOrderConditions) (*OrderList, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListOrders not implemented")
}
func (*UnimplementedShopServer) SaveOrder(context.Context, *Order) (*OrderID, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SaveOrder not implemented")
}
func (*UnimplementedShopServer) SaveCategories(context.Context, *CategoryList) (*CategoryList, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SaveCategories not implemented")
}
func (*UnimplementedShopServer) ListCategories(context.Context, *CategoryListConditions) (*CategoryList, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListCategories not implemented")
}
func (*UnimplementedShopServer) SearchArticles(context.Context, *TextSearch) (*ArticleList, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SearchArticles not implemented")
}
func (*UnimplementedShopServer) Suggest(context.Context, *TextSearch) (*SuggestionList, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Suggest not implemented")
}
func (*UnimplementedShopServer) SaveBasePrice(context.Context, *BasePrice) (*BasePrice, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SaveBasePrice not implemented")
}
func (*UnimplementedShopServer) DeleteBasePrice(context.Context, *BasePrice) (*Deleted, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteBasePrice not implemented")
}
func (*UnimplementedShopServer) ListBasesPrices(context.Context, *BasePriceListCondtions) (*BasePriceList, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListBasesPrices not implemented")
}
func (*UnimplementedShopServer) SendMessage(context.Context, *Message) (*MessageID, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SendMessage not implemented")
}

func RegisterShopServer(s *grpc.Server, srv ShopServer) {
	s.RegisterService(&_Shop_serviceDesc, srv)
}

func _Shop_SaveArticle_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Article)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ShopServer).SaveArticle(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/shop.Shop/SaveArticle",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ShopServer).SaveArticle(ctx, req.(*Article))
	}
	return interceptor(ctx, in, info, handler)
}

func _Shop_ViewArticle_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ArticleID)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ShopServer).ViewArticle(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/shop.Shop/ViewArticle",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ShopServer).ViewArticle(ctx, req.(*ArticleID))
	}
	return interceptor(ctx, in, info, handler)
}

func _Shop_ListArticles_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListConditions)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ShopServer).ListArticles(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/shop.Shop/ListArticles",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ShopServer).ListArticles(ctx, req.(*ListConditions))
	}
	return interceptor(ctx, in, info, handler)
}

func _Shop_DeleteArticle_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ArticleID)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ShopServer).DeleteArticle(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/shop.Shop/DeleteArticle",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ShopServer).DeleteArticle(ctx, req.(*ArticleID))
	}
	return interceptor(ctx, in, info, handler)
}

func _Shop_Checkout_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Order)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ShopServer).Checkout(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/shop.Shop/Checkout",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ShopServer).Checkout(ctx, req.(*Order))
	}
	return interceptor(ctx, in, info, handler)
}

func _Shop_ListOrders_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListOrderConditions)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ShopServer).ListOrders(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/shop.Shop/ListOrders",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ShopServer).ListOrders(ctx, req.(*ListOrderConditions))
	}
	return interceptor(ctx, in, info, handler)
}

func _Shop_SaveOrder_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Order)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ShopServer).SaveOrder(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/shop.Shop/SaveOrder",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ShopServer).SaveOrder(ctx, req.(*Order))
	}
	return interceptor(ctx, in, info, handler)
}

func _Shop_SaveCategories_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CategoryList)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ShopServer).SaveCategories(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/shop.Shop/SaveCategories",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ShopServer).SaveCategories(ctx, req.(*CategoryList))
	}
	return interceptor(ctx, in, info, handler)
}

func _Shop_ListCategories_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CategoryListConditions)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ShopServer).ListCategories(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/shop.Shop/ListCategories",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ShopServer).ListCategories(ctx, req.(*CategoryListConditions))
	}
	return interceptor(ctx, in, info, handler)
}

func _Shop_SearchArticles_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TextSearch)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ShopServer).SearchArticles(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/shop.Shop/SearchArticles",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ShopServer).SearchArticles(ctx, req.(*TextSearch))
	}
	return interceptor(ctx, in, info, handler)
}

func _Shop_Suggest_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TextSearch)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ShopServer).Suggest(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/shop.Shop/Suggest",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ShopServer).Suggest(ctx, req.(*TextSearch))
	}
	return interceptor(ctx, in, info, handler)
}

func _Shop_SaveBasePrice_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(BasePrice)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ShopServer).SaveBasePrice(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/shop.Shop/SaveBasePrice",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ShopServer).SaveBasePrice(ctx, req.(*BasePrice))
	}
	return interceptor(ctx, in, info, handler)
}

func _Shop_DeleteBasePrice_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(BasePrice)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ShopServer).DeleteBasePrice(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/shop.Shop/DeleteBasePrice",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ShopServer).DeleteBasePrice(ctx, req.(*BasePrice))
	}
	return interceptor(ctx, in, info, handler)
}

func _Shop_ListBasesPrices_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(BasePriceListCondtions)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ShopServer).ListBasesPrices(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/shop.Shop/ListBasesPrices",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ShopServer).ListBasesPrices(ctx, req.(*BasePriceListCondtions))
	}
	return interceptor(ctx, in, info, handler)
}

func _Shop_SendMessage_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Message)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ShopServer).SendMessage(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/shop.Shop/SendMessage",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ShopServer).SendMessage(ctx, req.(*Message))
	}
	return interceptor(ctx, in, info, handler)
}

var _Shop_serviceDesc = grpc.ServiceDesc{
	ServiceName: "shop.Shop",
	HandlerType: (*ShopServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "SaveArticle",
			Handler:    _Shop_SaveArticle_Handler,
		},
		{
			MethodName: "ViewArticle",
			Handler:    _Shop_ViewArticle_Handler,
		},
		{
			MethodName: "ListArticles",
			Handler:    _Shop_ListArticles_Handler,
		},
		{
			MethodName: "DeleteArticle",
			Handler:    _Shop_DeleteArticle_Handler,
		},
		{
			MethodName: "Checkout",
			Handler:    _Shop_Checkout_Handler,
		},
		{
			MethodName: "ListOrders",
			Handler:    _Shop_ListOrders_Handler,
		},
		{
			MethodName: "SaveOrder",
			Handler:    _Shop_SaveOrder_Handler,
		},
		{
			MethodName: "SaveCategories",
			Handler:    _Shop_SaveCategories_Handler,
		},
		{
			MethodName: "ListCategories",
			Handler:    _Shop_ListCategories_Handler,
		},
		{
			MethodName: "SearchArticles",
			Handler:    _Shop_SearchArticles_Handler,
		},
		{
			MethodName: "Suggest",
			Handler:    _Shop_Suggest_Handler,
		},
		{
			MethodName: "SaveBasePrice",
			Handler:    _Shop_SaveBasePrice_Handler,
		},
		{
			MethodName: "DeleteBasePrice",
			Handler:    _Shop_DeleteBasePrice_Handler,
		},
		{
			MethodName: "ListBasesPrices",
			Handler:    _Shop_ListBasesPrices_Handler,
		},
		{
			MethodName: "SendMessage",
			Handler:    _Shop_SendMessage_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "shop.proto",
}
