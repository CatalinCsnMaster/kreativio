/**
 * @fileoverview gRPC-Web generated client stub for shop
 * @enhanceable
 * @public
 */

// GENERATED CODE -- DO NOT EDIT!



const grpc = {};
grpc.web = require('grpc-web');


var google_protobuf_timestamp_pb = require('google-protobuf/google/protobuf/timestamp_pb.js')
const proto = {};
proto.shop = require('./shop_pb.js');

/**
 * @param {string} hostname
 * @param {?Object} credentials
 * @param {?Object} options
 * @constructor
 * @struct
 * @final
 */
proto.shop.ShopClient =
    function(hostname, credentials, options) {
  if (!options) options = {};
  options['format'] = 'text';

  /**
   * @private @const {!grpc.web.GrpcWebClientBase} The client
   */
  this.client_ = new grpc.web.GrpcWebClientBase(options);

  /**
   * @private @const {string} The hostname
   */
  this.hostname_ = hostname;

};


/**
 * @param {string} hostname
 * @param {?Object} credentials
 * @param {?Object} options
 * @constructor
 * @struct
 * @final
 */
proto.shop.ShopPromiseClient =
    function(hostname, credentials, options) {
  if (!options) options = {};
  options['format'] = 'text';

  /**
   * @private @const {!grpc.web.GrpcWebClientBase} The client
   */
  this.client_ = new grpc.web.GrpcWebClientBase(options);

  /**
   * @private @const {string} The hostname
   */
  this.hostname_ = hostname;

};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.shop.Article,
 *   !proto.shop.ArticleID>}
 */
const methodDescriptor_Shop_SaveArticle = new grpc.web.MethodDescriptor(
  '/shop.Shop/SaveArticle',
  grpc.web.MethodType.UNARY,
  proto.shop.Article,
  proto.shop.ArticleID,
  /**
   * @param {!proto.shop.Article} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.shop.ArticleID.deserializeBinary
);


/**
 * @const
 * @type {!grpc.web.AbstractClientBase.MethodInfo<
 *   !proto.shop.Article,
 *   !proto.shop.ArticleID>}
 */
const methodInfo_Shop_SaveArticle = new grpc.web.AbstractClientBase.MethodInfo(
  proto.shop.ArticleID,
  /**
   * @param {!proto.shop.Article} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.shop.ArticleID.deserializeBinary
);


/**
 * @param {!proto.shop.Article} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.Error, ?proto.shop.ArticleID)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.shop.ArticleID>|undefined}
 *     The XHR Node Readable Stream
 */
proto.shop.ShopClient.prototype.saveArticle =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/shop.Shop/SaveArticle',
      request,
      metadata || {},
      methodDescriptor_Shop_SaveArticle,
      callback);
};


/**
 * @param {!proto.shop.Article} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.shop.ArticleID>}
 *     A native promise that resolves to the response
 */
proto.shop.ShopPromiseClient.prototype.saveArticle =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/shop.Shop/SaveArticle',
      request,
      metadata || {},
      methodDescriptor_Shop_SaveArticle);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.shop.ArticleID,
 *   !proto.shop.Article>}
 */
const methodDescriptor_Shop_ViewArticle = new grpc.web.MethodDescriptor(
  '/shop.Shop/ViewArticle',
  grpc.web.MethodType.UNARY,
  proto.shop.ArticleID,
  proto.shop.Article,
  /**
   * @param {!proto.shop.ArticleID} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.shop.Article.deserializeBinary
);


/**
 * @const
 * @type {!grpc.web.AbstractClientBase.MethodInfo<
 *   !proto.shop.ArticleID,
 *   !proto.shop.Article>}
 */
const methodInfo_Shop_ViewArticle = new grpc.web.AbstractClientBase.MethodInfo(
  proto.shop.Article,
  /**
   * @param {!proto.shop.ArticleID} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.shop.Article.deserializeBinary
);


/**
 * @param {!proto.shop.ArticleID} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.Error, ?proto.shop.Article)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.shop.Article>|undefined}
 *     The XHR Node Readable Stream
 */
proto.shop.ShopClient.prototype.viewArticle =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/shop.Shop/ViewArticle',
      request,
      metadata || {},
      methodDescriptor_Shop_ViewArticle,
      callback);
};


/**
 * @param {!proto.shop.ArticleID} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.shop.Article>}
 *     A native promise that resolves to the response
 */
proto.shop.ShopPromiseClient.prototype.viewArticle =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/shop.Shop/ViewArticle',
      request,
      metadata || {},
      methodDescriptor_Shop_ViewArticle);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.shop.ListConditions,
 *   !proto.shop.ArticleList>}
 */
const methodDescriptor_Shop_ListArticles = new grpc.web.MethodDescriptor(
  '/shop.Shop/ListArticles',
  grpc.web.MethodType.UNARY,
  proto.shop.ListConditions,
  proto.shop.ArticleList,
  /**
   * @param {!proto.shop.ListConditions} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.shop.ArticleList.deserializeBinary
);


/**
 * @const
 * @type {!grpc.web.AbstractClientBase.MethodInfo<
 *   !proto.shop.ListConditions,
 *   !proto.shop.ArticleList>}
 */
const methodInfo_Shop_ListArticles = new grpc.web.AbstractClientBase.MethodInfo(
  proto.shop.ArticleList,
  /**
   * @param {!proto.shop.ListConditions} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.shop.ArticleList.deserializeBinary
);


/**
 * @param {!proto.shop.ListConditions} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.Error, ?proto.shop.ArticleList)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.shop.ArticleList>|undefined}
 *     The XHR Node Readable Stream
 */
proto.shop.ShopClient.prototype.listArticles =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/shop.Shop/ListArticles',
      request,
      metadata || {},
      methodDescriptor_Shop_ListArticles,
      callback);
};


/**
 * @param {!proto.shop.ListConditions} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.shop.ArticleList>}
 *     A native promise that resolves to the response
 */
proto.shop.ShopPromiseClient.prototype.listArticles =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/shop.Shop/ListArticles',
      request,
      metadata || {},
      methodDescriptor_Shop_ListArticles);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.shop.ArticleID,
 *   !proto.shop.Deleted>}
 */
const methodDescriptor_Shop_DeleteArticle = new grpc.web.MethodDescriptor(
  '/shop.Shop/DeleteArticle',
  grpc.web.MethodType.UNARY,
  proto.shop.ArticleID,
  proto.shop.Deleted,
  /**
   * @param {!proto.shop.ArticleID} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.shop.Deleted.deserializeBinary
);


/**
 * @const
 * @type {!grpc.web.AbstractClientBase.MethodInfo<
 *   !proto.shop.ArticleID,
 *   !proto.shop.Deleted>}
 */
const methodInfo_Shop_DeleteArticle = new grpc.web.AbstractClientBase.MethodInfo(
  proto.shop.Deleted,
  /**
   * @param {!proto.shop.ArticleID} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.shop.Deleted.deserializeBinary
);


/**
 * @param {!proto.shop.ArticleID} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.Error, ?proto.shop.Deleted)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.shop.Deleted>|undefined}
 *     The XHR Node Readable Stream
 */
proto.shop.ShopClient.prototype.deleteArticle =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/shop.Shop/DeleteArticle',
      request,
      metadata || {},
      methodDescriptor_Shop_DeleteArticle,
      callback);
};


/**
 * @param {!proto.shop.ArticleID} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.shop.Deleted>}
 *     A native promise that resolves to the response
 */
proto.shop.ShopPromiseClient.prototype.deleteArticle =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/shop.Shop/DeleteArticle',
      request,
      metadata || {},
      methodDescriptor_Shop_DeleteArticle);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.shop.Order,
 *   !proto.shop.OrderID>}
 */
const methodDescriptor_Shop_Checkout = new grpc.web.MethodDescriptor(
  '/shop.Shop/Checkout',
  grpc.web.MethodType.UNARY,
  proto.shop.Order,
  proto.shop.OrderID,
  /**
   * @param {!proto.shop.Order} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.shop.OrderID.deserializeBinary
);


/**
 * @const
 * @type {!grpc.web.AbstractClientBase.MethodInfo<
 *   !proto.shop.Order,
 *   !proto.shop.OrderID>}
 */
const methodInfo_Shop_Checkout = new grpc.web.AbstractClientBase.MethodInfo(
  proto.shop.OrderID,
  /**
   * @param {!proto.shop.Order} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.shop.OrderID.deserializeBinary
);


/**
 * @param {!proto.shop.Order} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.Error, ?proto.shop.OrderID)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.shop.OrderID>|undefined}
 *     The XHR Node Readable Stream
 */
proto.shop.ShopClient.prototype.checkout =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/shop.Shop/Checkout',
      request,
      metadata || {},
      methodDescriptor_Shop_Checkout,
      callback);
};


/**
 * @param {!proto.shop.Order} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.shop.OrderID>}
 *     A native promise that resolves to the response
 */
proto.shop.ShopPromiseClient.prototype.checkout =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/shop.Shop/Checkout',
      request,
      metadata || {},
      methodDescriptor_Shop_Checkout);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.shop.ListOrderConditions,
 *   !proto.shop.OrderList>}
 */
const methodDescriptor_Shop_ListOrders = new grpc.web.MethodDescriptor(
  '/shop.Shop/ListOrders',
  grpc.web.MethodType.UNARY,
  proto.shop.ListOrderConditions,
  proto.shop.OrderList,
  /**
   * @param {!proto.shop.ListOrderConditions} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.shop.OrderList.deserializeBinary
);


/**
 * @const
 * @type {!grpc.web.AbstractClientBase.MethodInfo<
 *   !proto.shop.ListOrderConditions,
 *   !proto.shop.OrderList>}
 */
const methodInfo_Shop_ListOrders = new grpc.web.AbstractClientBase.MethodInfo(
  proto.shop.OrderList,
  /**
   * @param {!proto.shop.ListOrderConditions} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.shop.OrderList.deserializeBinary
);


/**
 * @param {!proto.shop.ListOrderConditions} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.Error, ?proto.shop.OrderList)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.shop.OrderList>|undefined}
 *     The XHR Node Readable Stream
 */
proto.shop.ShopClient.prototype.listOrders =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/shop.Shop/ListOrders',
      request,
      metadata || {},
      methodDescriptor_Shop_ListOrders,
      callback);
};


/**
 * @param {!proto.shop.ListOrderConditions} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.shop.OrderList>}
 *     A native promise that resolves to the response
 */
proto.shop.ShopPromiseClient.prototype.listOrders =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/shop.Shop/ListOrders',
      request,
      metadata || {},
      methodDescriptor_Shop_ListOrders);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.shop.Order,
 *   !proto.shop.OrderID>}
 */
const methodDescriptor_Shop_SaveOrder = new grpc.web.MethodDescriptor(
  '/shop.Shop/SaveOrder',
  grpc.web.MethodType.UNARY,
  proto.shop.Order,
  proto.shop.OrderID,
  /**
   * @param {!proto.shop.Order} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.shop.OrderID.deserializeBinary
);


/**
 * @const
 * @type {!grpc.web.AbstractClientBase.MethodInfo<
 *   !proto.shop.Order,
 *   !proto.shop.OrderID>}
 */
const methodInfo_Shop_SaveOrder = new grpc.web.AbstractClientBase.MethodInfo(
  proto.shop.OrderID,
  /**
   * @param {!proto.shop.Order} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.shop.OrderID.deserializeBinary
);


/**
 * @param {!proto.shop.Order} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.Error, ?proto.shop.OrderID)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.shop.OrderID>|undefined}
 *     The XHR Node Readable Stream
 */
proto.shop.ShopClient.prototype.saveOrder =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/shop.Shop/SaveOrder',
      request,
      metadata || {},
      methodDescriptor_Shop_SaveOrder,
      callback);
};


/**
 * @param {!proto.shop.Order} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.shop.OrderID>}
 *     A native promise that resolves to the response
 */
proto.shop.ShopPromiseClient.prototype.saveOrder =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/shop.Shop/SaveOrder',
      request,
      metadata || {},
      methodDescriptor_Shop_SaveOrder);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.shop.CategoryList,
 *   !proto.shop.CategoryList>}
 */
const methodDescriptor_Shop_SaveCategories = new grpc.web.MethodDescriptor(
  '/shop.Shop/SaveCategories',
  grpc.web.MethodType.UNARY,
  proto.shop.CategoryList,
  proto.shop.CategoryList,
  /**
   * @param {!proto.shop.CategoryList} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.shop.CategoryList.deserializeBinary
);


/**
 * @const
 * @type {!grpc.web.AbstractClientBase.MethodInfo<
 *   !proto.shop.CategoryList,
 *   !proto.shop.CategoryList>}
 */
const methodInfo_Shop_SaveCategories = new grpc.web.AbstractClientBase.MethodInfo(
  proto.shop.CategoryList,
  /**
   * @param {!proto.shop.CategoryList} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.shop.CategoryList.deserializeBinary
);


/**
 * @param {!proto.shop.CategoryList} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.Error, ?proto.shop.CategoryList)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.shop.CategoryList>|undefined}
 *     The XHR Node Readable Stream
 */
proto.shop.ShopClient.prototype.saveCategories =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/shop.Shop/SaveCategories',
      request,
      metadata || {},
      methodDescriptor_Shop_SaveCategories,
      callback);
};


/**
 * @param {!proto.shop.CategoryList} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.shop.CategoryList>}
 *     A native promise that resolves to the response
 */
proto.shop.ShopPromiseClient.prototype.saveCategories =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/shop.Shop/SaveCategories',
      request,
      metadata || {},
      methodDescriptor_Shop_SaveCategories);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.shop.CategoryListConditions,
 *   !proto.shop.CategoryList>}
 */
const methodDescriptor_Shop_ListCategories = new grpc.web.MethodDescriptor(
  '/shop.Shop/ListCategories',
  grpc.web.MethodType.UNARY,
  proto.shop.CategoryListConditions,
  proto.shop.CategoryList,
  /**
   * @param {!proto.shop.CategoryListConditions} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.shop.CategoryList.deserializeBinary
);


/**
 * @const
 * @type {!grpc.web.AbstractClientBase.MethodInfo<
 *   !proto.shop.CategoryListConditions,
 *   !proto.shop.CategoryList>}
 */
const methodInfo_Shop_ListCategories = new grpc.web.AbstractClientBase.MethodInfo(
  proto.shop.CategoryList,
  /**
   * @param {!proto.shop.CategoryListConditions} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.shop.CategoryList.deserializeBinary
);


/**
 * @param {!proto.shop.CategoryListConditions} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.Error, ?proto.shop.CategoryList)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.shop.CategoryList>|undefined}
 *     The XHR Node Readable Stream
 */
proto.shop.ShopClient.prototype.listCategories =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/shop.Shop/ListCategories',
      request,
      metadata || {},
      methodDescriptor_Shop_ListCategories,
      callback);
};


/**
 * @param {!proto.shop.CategoryListConditions} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.shop.CategoryList>}
 *     A native promise that resolves to the response
 */
proto.shop.ShopPromiseClient.prototype.listCategories =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/shop.Shop/ListCategories',
      request,
      metadata || {},
      methodDescriptor_Shop_ListCategories);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.shop.TextSearch,
 *   !proto.shop.ArticleList>}
 */
const methodDescriptor_Shop_SearchArticles = new grpc.web.MethodDescriptor(
  '/shop.Shop/SearchArticles',
  grpc.web.MethodType.UNARY,
  proto.shop.TextSearch,
  proto.shop.ArticleList,
  /**
   * @param {!proto.shop.TextSearch} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.shop.ArticleList.deserializeBinary
);


/**
 * @const
 * @type {!grpc.web.AbstractClientBase.MethodInfo<
 *   !proto.shop.TextSearch,
 *   !proto.shop.ArticleList>}
 */
const methodInfo_Shop_SearchArticles = new grpc.web.AbstractClientBase.MethodInfo(
  proto.shop.ArticleList,
  /**
   * @param {!proto.shop.TextSearch} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.shop.ArticleList.deserializeBinary
);


/**
 * @param {!proto.shop.TextSearch} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.Error, ?proto.shop.ArticleList)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.shop.ArticleList>|undefined}
 *     The XHR Node Readable Stream
 */
proto.shop.ShopClient.prototype.searchArticles =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/shop.Shop/SearchArticles',
      request,
      metadata || {},
      methodDescriptor_Shop_SearchArticles,
      callback);
};


/**
 * @param {!proto.shop.TextSearch} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.shop.ArticleList>}
 *     A native promise that resolves to the response
 */
proto.shop.ShopPromiseClient.prototype.searchArticles =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/shop.Shop/SearchArticles',
      request,
      metadata || {},
      methodDescriptor_Shop_SearchArticles);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.shop.TextSearch,
 *   !proto.shop.SuggestionList>}
 */
const methodDescriptor_Shop_Suggest = new grpc.web.MethodDescriptor(
  '/shop.Shop/Suggest',
  grpc.web.MethodType.UNARY,
  proto.shop.TextSearch,
  proto.shop.SuggestionList,
  /**
   * @param {!proto.shop.TextSearch} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.shop.SuggestionList.deserializeBinary
);


/**
 * @const
 * @type {!grpc.web.AbstractClientBase.MethodInfo<
 *   !proto.shop.TextSearch,
 *   !proto.shop.SuggestionList>}
 */
const methodInfo_Shop_Suggest = new grpc.web.AbstractClientBase.MethodInfo(
  proto.shop.SuggestionList,
  /**
   * @param {!proto.shop.TextSearch} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.shop.SuggestionList.deserializeBinary
);


/**
 * @param {!proto.shop.TextSearch} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.Error, ?proto.shop.SuggestionList)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.shop.SuggestionList>|undefined}
 *     The XHR Node Readable Stream
 */
proto.shop.ShopClient.prototype.suggest =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/shop.Shop/Suggest',
      request,
      metadata || {},
      methodDescriptor_Shop_Suggest,
      callback);
};


/**
 * @param {!proto.shop.TextSearch} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.shop.SuggestionList>}
 *     A native promise that resolves to the response
 */
proto.shop.ShopPromiseClient.prototype.suggest =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/shop.Shop/Suggest',
      request,
      metadata || {},
      methodDescriptor_Shop_Suggest);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.shop.BasePrice,
 *   !proto.shop.BasePrice>}
 */
const methodDescriptor_Shop_SaveBasePrice = new grpc.web.MethodDescriptor(
  '/shop.Shop/SaveBasePrice',
  grpc.web.MethodType.UNARY,
  proto.shop.BasePrice,
  proto.shop.BasePrice,
  /**
   * @param {!proto.shop.BasePrice} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.shop.BasePrice.deserializeBinary
);


/**
 * @const
 * @type {!grpc.web.AbstractClientBase.MethodInfo<
 *   !proto.shop.BasePrice,
 *   !proto.shop.BasePrice>}
 */
const methodInfo_Shop_SaveBasePrice = new grpc.web.AbstractClientBase.MethodInfo(
  proto.shop.BasePrice,
  /**
   * @param {!proto.shop.BasePrice} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.shop.BasePrice.deserializeBinary
);


/**
 * @param {!proto.shop.BasePrice} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.Error, ?proto.shop.BasePrice)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.shop.BasePrice>|undefined}
 *     The XHR Node Readable Stream
 */
proto.shop.ShopClient.prototype.saveBasePrice =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/shop.Shop/SaveBasePrice',
      request,
      metadata || {},
      methodDescriptor_Shop_SaveBasePrice,
      callback);
};


/**
 * @param {!proto.shop.BasePrice} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.shop.BasePrice>}
 *     A native promise that resolves to the response
 */
proto.shop.ShopPromiseClient.prototype.saveBasePrice =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/shop.Shop/SaveBasePrice',
      request,
      metadata || {},
      methodDescriptor_Shop_SaveBasePrice);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.shop.BasePrice,
 *   !proto.shop.Deleted>}
 */
const methodDescriptor_Shop_DeleteBasePrice = new grpc.web.MethodDescriptor(
  '/shop.Shop/DeleteBasePrice',
  grpc.web.MethodType.UNARY,
  proto.shop.BasePrice,
  proto.shop.Deleted,
  /**
   * @param {!proto.shop.BasePrice} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.shop.Deleted.deserializeBinary
);


/**
 * @const
 * @type {!grpc.web.AbstractClientBase.MethodInfo<
 *   !proto.shop.BasePrice,
 *   !proto.shop.Deleted>}
 */
const methodInfo_Shop_DeleteBasePrice = new grpc.web.AbstractClientBase.MethodInfo(
  proto.shop.Deleted,
  /**
   * @param {!proto.shop.BasePrice} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.shop.Deleted.deserializeBinary
);


/**
 * @param {!proto.shop.BasePrice} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.Error, ?proto.shop.Deleted)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.shop.Deleted>|undefined}
 *     The XHR Node Readable Stream
 */
proto.shop.ShopClient.prototype.deleteBasePrice =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/shop.Shop/DeleteBasePrice',
      request,
      metadata || {},
      methodDescriptor_Shop_DeleteBasePrice,
      callback);
};


/**
 * @param {!proto.shop.BasePrice} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.shop.Deleted>}
 *     A native promise that resolves to the response
 */
proto.shop.ShopPromiseClient.prototype.deleteBasePrice =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/shop.Shop/DeleteBasePrice',
      request,
      metadata || {},
      methodDescriptor_Shop_DeleteBasePrice);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.shop.BasePriceListCondtions,
 *   !proto.shop.BasePriceList>}
 */
const methodDescriptor_Shop_ListBasesPrices = new grpc.web.MethodDescriptor(
  '/shop.Shop/ListBasesPrices',
  grpc.web.MethodType.UNARY,
  proto.shop.BasePriceListCondtions,
  proto.shop.BasePriceList,
  /**
   * @param {!proto.shop.BasePriceListCondtions} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.shop.BasePriceList.deserializeBinary
);


/**
 * @const
 * @type {!grpc.web.AbstractClientBase.MethodInfo<
 *   !proto.shop.BasePriceListCondtions,
 *   !proto.shop.BasePriceList>}
 */
const methodInfo_Shop_ListBasesPrices = new grpc.web.AbstractClientBase.MethodInfo(
  proto.shop.BasePriceList,
  /**
   * @param {!proto.shop.BasePriceListCondtions} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.shop.BasePriceList.deserializeBinary
);


/**
 * @param {!proto.shop.BasePriceListCondtions} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.Error, ?proto.shop.BasePriceList)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.shop.BasePriceList>|undefined}
 *     The XHR Node Readable Stream
 */
proto.shop.ShopClient.prototype.listBasesPrices =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/shop.Shop/ListBasesPrices',
      request,
      metadata || {},
      methodDescriptor_Shop_ListBasesPrices,
      callback);
};


/**
 * @param {!proto.shop.BasePriceListCondtions} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.shop.BasePriceList>}
 *     A native promise that resolves to the response
 */
proto.shop.ShopPromiseClient.prototype.listBasesPrices =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/shop.Shop/ListBasesPrices',
      request,
      metadata || {},
      methodDescriptor_Shop_ListBasesPrices);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.shop.Message,
 *   !proto.shop.MessageID>}
 */
const methodDescriptor_Shop_SendMessage = new grpc.web.MethodDescriptor(
  '/shop.Shop/SendMessage',
  grpc.web.MethodType.UNARY,
  proto.shop.Message,
  proto.shop.MessageID,
  /**
   * @param {!proto.shop.Message} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.shop.MessageID.deserializeBinary
);


/**
 * @const
 * @type {!grpc.web.AbstractClientBase.MethodInfo<
 *   !proto.shop.Message,
 *   !proto.shop.MessageID>}
 */
const methodInfo_Shop_SendMessage = new grpc.web.AbstractClientBase.MethodInfo(
  proto.shop.MessageID,
  /**
   * @param {!proto.shop.Message} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.shop.MessageID.deserializeBinary
);


/**
 * @param {!proto.shop.Message} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.Error, ?proto.shop.MessageID)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.shop.MessageID>|undefined}
 *     The XHR Node Readable Stream
 */
proto.shop.ShopClient.prototype.sendMessage =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/shop.Shop/SendMessage',
      request,
      metadata || {},
      methodDescriptor_Shop_SendMessage,
      callback);
};


/**
 * @param {!proto.shop.Message} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.shop.MessageID>}
 *     A native promise that resolves to the response
 */
proto.shop.ShopPromiseClient.prototype.sendMessage =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/shop.Shop/SendMessage',
      request,
      metadata || {},
      methodDescriptor_Shop_SendMessage);
};


module.exports = proto.shop;

